; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

define [2 x <2 x i32>] @vector_arm_neon_mixed_types([2 x <8 x i8>] %0, [2 x <8 x i4>] %1, [2 x <2 x i32>] %2) {
  %4 = extractvalue [2 x <8 x i4>] %1, 0
  %5 = sext <8 x i4> %4 to <8 x i8>
  %6 = extractvalue [2 x <8 x i4>] %1, 1
  %7 = sext <8 x i4> %6 to <8 x i8>
  %8 = extractvalue [2 x <8 x i8>] %0, 0
  %9 = shufflevector <8 x i8> %8, <8 x i8> %8, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %10 = shufflevector <16 x i8> %9, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %11 = extractvalue [2 x <8 x i8>] %0, 1
  %12 = shufflevector <8 x i8> %11, <8 x i8> %11, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %13 = shufflevector <16 x i8> %12, <16 x i8> %10, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %14 = shufflevector <8 x i8> %5, <8 x i8> %5, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %15 = shufflevector <16 x i8> %14, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %16 = shufflevector <8 x i8> %7, <8 x i8> %7, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %17 = shufflevector <16 x i8> %16, <16 x i8> %15, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %18 = extractvalue [2 x <2 x i32>] %2, 0
  %19 = shufflevector <2 x i32> %18, <2 x i32> %18, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %20 = shufflevector <4 x i32> %19, <4 x i32> zeroinitializer, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %21 = extractvalue [2 x <2 x i32>] %2, 1
  %22 = shufflevector <2 x i32> %21, <2 x i32> %21, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %23 = shufflevector <4 x i32> %22, <4 x i32> %20, <4 x i32> <i32 4, i32 5, i32 0, i32 1>
  %24 = call <4 x i32> @llvm.aarch64.neon.smmla.v4i32.v16i8(<4 x i32> %23, <16 x i8> %13, <16 x i8> %17)
  %25 = shufflevector <4 x i32> %24, <4 x i32> %24, <2 x i32> <i32 0, i32 1>
  %26 = insertvalue [2 x <2 x i32>] zeroinitializer, <2 x i32> %25, 0
  %27 = shufflevector <4 x i32> %24, <4 x i32> %24, <2 x i32> <i32 2, i32 3>
  %28 = insertvalue [2 x <2 x i32>] %26, <2 x i32> %27, 1
  ret [2 x <2 x i32>] %28
}

define [2 x <2 x i32>] @vector_arm_neon_same_types([2 x <8 x i8>] %0, [2 x <8 x i8>] %1, [2 x <2 x i32>] %2) {
  %4 = extractvalue [2 x <8 x i8>] %0, 0
  %5 = shufflevector <8 x i8> %4, <8 x i8> %4, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %6 = shufflevector <16 x i8> %5, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7 = extractvalue [2 x <8 x i8>] %0, 1
  %8 = shufflevector <8 x i8> %7, <8 x i8> %7, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %9 = shufflevector <16 x i8> %8, <16 x i8> %6, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %10 = extractvalue [2 x <8 x i8>] %1, 0
  %11 = shufflevector <8 x i8> %10, <8 x i8> %10, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %12 = shufflevector <16 x i8> %11, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %13 = extractvalue [2 x <8 x i8>] %1, 1
  %14 = shufflevector <8 x i8> %13, <8 x i8> %13, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %15 = shufflevector <16 x i8> %14, <16 x i8> %12, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %16 = extractvalue [2 x <2 x i32>] %2, 0
  %17 = shufflevector <2 x i32> %16, <2 x i32> %16, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %18 = shufflevector <4 x i32> %17, <4 x i32> zeroinitializer, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %19 = extractvalue [2 x <2 x i32>] %2, 1
  %20 = shufflevector <2 x i32> %19, <2 x i32> %19, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %21 = shufflevector <4 x i32> %20, <4 x i32> %18, <4 x i32> <i32 4, i32 5, i32 0, i32 1>
  %22 = call <4 x i32> @llvm.aarch64.neon.smmla.v4i32.v16i8(<4 x i32> %21, <16 x i8> %9, <16 x i8> %15)
  %23 = shufflevector <4 x i32> %22, <4 x i32> %22, <2 x i32> <i32 0, i32 1>
  %24 = insertvalue [2 x <2 x i32>] zeroinitializer, <2 x i32> %23, 0
  %25 = shufflevector <4 x i32> %22, <4 x i32> %22, <2 x i32> <i32 2, i32 3>
  %26 = insertvalue [2 x <2 x i32>] %24, <2 x i32> %25, 1
  ret [2 x <2 x i32>] %26
}

define [2 x <2 x i32>] @vector_arm_neon_without_extsi([2 x <8 x i32>] %0, [2 x <8 x i32>] %1, [2 x <2 x i32>] %2) {
  %4 = extractvalue [2 x <8 x i32>] %0, 0
  %5 = extractvalue [2 x <8 x i32>] %1, 0
  %6 = mul <8 x i32> %4, %5
  %7 = call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %6)
  %8 = insertelement <2 x i32> zeroinitializer, i32 %7, i64 0
  %9 = extractvalue [2 x <8 x i32>] %1, 1
  %10 = mul <8 x i32> %4, %9
  %11 = call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %10)
  %12 = insertelement <2 x i32> %8, i32 %11, i64 1
  %13 = extractvalue [2 x <8 x i32>] %0, 1
  %14 = mul <8 x i32> %13, %5
  %15 = call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %14)
  %16 = insertelement <2 x i32> zeroinitializer, i32 %15, i64 0
  %17 = mul <8 x i32> %13, %9
  %18 = call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %17)
  %19 = insertelement <2 x i32> %16, i32 %18, i64 1
  %20 = extractvalue [2 x <2 x i32>] %2, 0
  %21 = add <2 x i32> %12, %20
  %22 = insertvalue [2 x <2 x i32>] undef, <2 x i32> %21, 0
  %23 = extractvalue [2 x <2 x i32>] %2, 1
  %24 = add <2 x i32> %19, %23
  %25 = insertvalue [2 x <2 x i32>] %22, <2 x i32> %24, 1
  ret [2 x <2 x i32>] %25
}

define [4 x <4 x i32>] @vector_arm_neon_unroll([4 x <8 x i8>] %0, [4 x <8 x i8>] %1, [4 x <4 x i32>] %2) {
  %4 = extractvalue [4 x <4 x i32>] %2, 0
  %5 = shufflevector <4 x i32> %4, <4 x i32> %4, <2 x i32> <i32 0, i32 1>
  %6 = extractvalue [4 x <4 x i32>] %2, 1
  %7 = shufflevector <4 x i32> %6, <4 x i32> %6, <2 x i32> <i32 0, i32 1>
  %8 = extractvalue [4 x <8 x i8>] %0, 0
  %9 = shufflevector <8 x i8> %8, <8 x i8> %8, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %10 = shufflevector <16 x i8> %9, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %11 = extractvalue [4 x <8 x i8>] %0, 1
  %12 = shufflevector <8 x i8> %11, <8 x i8> %11, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %13 = shufflevector <16 x i8> %12, <16 x i8> %10, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %14 = extractvalue [4 x <8 x i8>] %1, 0
  %15 = shufflevector <8 x i8> %14, <8 x i8> %14, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %16 = shufflevector <16 x i8> %15, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %17 = extractvalue [4 x <8 x i8>] %1, 1
  %18 = shufflevector <8 x i8> %17, <8 x i8> %17, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %19 = shufflevector <16 x i8> %18, <16 x i8> %16, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %20 = shufflevector <2 x i32> %5, <2 x i32> %5, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %21 = shufflevector <4 x i32> %20, <4 x i32> zeroinitializer, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %22 = shufflevector <2 x i32> %7, <2 x i32> %7, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %23 = shufflevector <4 x i32> %22, <4 x i32> %21, <4 x i32> <i32 4, i32 5, i32 0, i32 1>
  %24 = call <4 x i32> @llvm.aarch64.neon.smmla.v4i32.v16i8(<4 x i32> %23, <16 x i8> %13, <16 x i8> %19)
  %25 = shufflevector <4 x i32> %24, <4 x i32> %24, <2 x i32> <i32 0, i32 1>
  %26 = shufflevector <4 x i32> %24, <4 x i32> %24, <2 x i32> <i32 2, i32 3>
  %27 = shufflevector <2 x i32> %25, <2 x i32> %25, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %28 = shufflevector <4 x i32> %27, <4 x i32> zeroinitializer, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %29 = insertvalue [4 x <4 x i32>] zeroinitializer, <4 x i32> %28, 0
  %30 = shufflevector <2 x i32> %26, <2 x i32> %26, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %31 = shufflevector <4 x i32> %30, <4 x i32> zeroinitializer, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %32 = insertvalue [4 x <4 x i32>] %29, <4 x i32> %31, 1
  %33 = shufflevector <4 x i32> %4, <4 x i32> %4, <2 x i32> <i32 2, i32 3>
  %34 = shufflevector <4 x i32> %6, <4 x i32> %6, <2 x i32> <i32 2, i32 3>
  %35 = extractvalue [4 x <8 x i8>] %1, 2
  %36 = shufflevector <8 x i8> %35, <8 x i8> %35, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %37 = shufflevector <16 x i8> %36, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %38 = extractvalue [4 x <8 x i8>] %1, 3
  %39 = shufflevector <8 x i8> %38, <8 x i8> %38, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %40 = shufflevector <16 x i8> %39, <16 x i8> %37, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %41 = shufflevector <2 x i32> %33, <2 x i32> %33, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %42 = shufflevector <4 x i32> %41, <4 x i32> zeroinitializer, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %43 = shufflevector <2 x i32> %34, <2 x i32> %34, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %44 = shufflevector <4 x i32> %43, <4 x i32> %42, <4 x i32> <i32 4, i32 5, i32 0, i32 1>
  %45 = call <4 x i32> @llvm.aarch64.neon.smmla.v4i32.v16i8(<4 x i32> %44, <16 x i8> %13, <16 x i8> %40)
  %46 = shufflevector <4 x i32> %45, <4 x i32> %45, <2 x i32> <i32 0, i32 1>
  %47 = shufflevector <4 x i32> %45, <4 x i32> %45, <2 x i32> <i32 2, i32 3>
  %48 = shufflevector <2 x i32> %46, <2 x i32> %46, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %49 = shufflevector <4 x i32> %48, <4 x i32> %28, <4 x i32> <i32 4, i32 5, i32 0, i32 1>
  %50 = insertvalue [4 x <4 x i32>] %32, <4 x i32> %49, 0
  %51 = shufflevector <2 x i32> %47, <2 x i32> %47, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %52 = shufflevector <4 x i32> %51, <4 x i32> %31, <4 x i32> <i32 4, i32 5, i32 0, i32 1>
  %53 = insertvalue [4 x <4 x i32>] %50, <4 x i32> %52, 1
  %54 = extractvalue [4 x <4 x i32>] %2, 2
  %55 = shufflevector <4 x i32> %54, <4 x i32> %54, <2 x i32> <i32 0, i32 1>
  %56 = extractvalue [4 x <4 x i32>] %2, 3
  %57 = shufflevector <4 x i32> %56, <4 x i32> %56, <2 x i32> <i32 0, i32 1>
  %58 = extractvalue [4 x <8 x i8>] %0, 2
  %59 = shufflevector <8 x i8> %58, <8 x i8> %58, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %60 = shufflevector <16 x i8> %59, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %61 = extractvalue [4 x <8 x i8>] %0, 3
  %62 = shufflevector <8 x i8> %61, <8 x i8> %61, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %63 = shufflevector <16 x i8> %62, <16 x i8> %60, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %64 = shufflevector <2 x i32> %55, <2 x i32> %55, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %65 = shufflevector <4 x i32> %64, <4 x i32> zeroinitializer, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %66 = shufflevector <2 x i32> %57, <2 x i32> %57, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %67 = shufflevector <4 x i32> %66, <4 x i32> %65, <4 x i32> <i32 4, i32 5, i32 0, i32 1>
  %68 = call <4 x i32> @llvm.aarch64.neon.smmla.v4i32.v16i8(<4 x i32> %67, <16 x i8> %63, <16 x i8> %19)
  %69 = shufflevector <4 x i32> %68, <4 x i32> %68, <2 x i32> <i32 0, i32 1>
  %70 = shufflevector <4 x i32> %68, <4 x i32> %68, <2 x i32> <i32 2, i32 3>
  %71 = shufflevector <2 x i32> %69, <2 x i32> %69, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %72 = shufflevector <4 x i32> %71, <4 x i32> zeroinitializer, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %73 = insertvalue [4 x <4 x i32>] %53, <4 x i32> %72, 2
  %74 = shufflevector <2 x i32> %70, <2 x i32> %70, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %75 = shufflevector <4 x i32> %74, <4 x i32> zeroinitializer, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %76 = insertvalue [4 x <4 x i32>] %73, <4 x i32> %75, 3
  %77 = shufflevector <4 x i32> %54, <4 x i32> %54, <2 x i32> <i32 2, i32 3>
  %78 = shufflevector <4 x i32> %56, <4 x i32> %56, <2 x i32> <i32 2, i32 3>
  %79 = shufflevector <2 x i32> %77, <2 x i32> %77, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %80 = shufflevector <4 x i32> %79, <4 x i32> zeroinitializer, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %81 = shufflevector <2 x i32> %78, <2 x i32> %78, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %82 = shufflevector <4 x i32> %81, <4 x i32> %80, <4 x i32> <i32 4, i32 5, i32 0, i32 1>
  %83 = call <4 x i32> @llvm.aarch64.neon.smmla.v4i32.v16i8(<4 x i32> %82, <16 x i8> %63, <16 x i8> %40)
  %84 = shufflevector <4 x i32> %83, <4 x i32> %83, <2 x i32> <i32 0, i32 1>
  %85 = shufflevector <4 x i32> %83, <4 x i32> %83, <2 x i32> <i32 2, i32 3>
  %86 = shufflevector <2 x i32> %84, <2 x i32> %84, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %87 = shufflevector <4 x i32> %86, <4 x i32> %72, <4 x i32> <i32 4, i32 5, i32 0, i32 1>
  %88 = insertvalue [4 x <4 x i32>] %76, <4 x i32> %87, 2
  %89 = shufflevector <2 x i32> %85, <2 x i32> %85, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %90 = shufflevector <4 x i32> %89, <4 x i32> %75, <4 x i32> <i32 4, i32 5, i32 0, i32 1>
  %91 = insertvalue [4 x <4 x i32>] %88, <4 x i32> %90, 3
  ret [4 x <4 x i32>] %91
}

define [4 x <2 x i32>] @vector_arm_neon_mixed_unroll([4 x <8 x i8>] %0, [2 x <8 x i4>] %1, [4 x <2 x i32>] %2) {
  %4 = extractvalue [2 x <8 x i4>] %1, 0
  %5 = sext <8 x i4> %4 to <8 x i8>
  %6 = extractvalue [2 x <8 x i4>] %1, 1
  %7 = sext <8 x i4> %6 to <8 x i8>
  %8 = extractvalue [4 x <8 x i8>] %0, 0
  %9 = shufflevector <8 x i8> %8, <8 x i8> %8, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %10 = shufflevector <16 x i8> %9, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %11 = extractvalue [4 x <8 x i8>] %0, 1
  %12 = shufflevector <8 x i8> %11, <8 x i8> %11, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %13 = shufflevector <16 x i8> %12, <16 x i8> %10, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %14 = shufflevector <8 x i8> %5, <8 x i8> %5, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %15 = shufflevector <16 x i8> %14, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %16 = shufflevector <8 x i8> %7, <8 x i8> %7, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %17 = shufflevector <16 x i8> %16, <16 x i8> %15, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %18 = extractvalue [4 x <2 x i32>] %2, 0
  %19 = shufflevector <2 x i32> %18, <2 x i32> %18, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %20 = shufflevector <4 x i32> %19, <4 x i32> zeroinitializer, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %21 = extractvalue [4 x <2 x i32>] %2, 1
  %22 = shufflevector <2 x i32> %21, <2 x i32> %21, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %23 = shufflevector <4 x i32> %22, <4 x i32> %20, <4 x i32> <i32 4, i32 5, i32 0, i32 1>
  %24 = call <4 x i32> @llvm.aarch64.neon.smmla.v4i32.v16i8(<4 x i32> %23, <16 x i8> %13, <16 x i8> %17)
  %25 = shufflevector <4 x i32> %24, <4 x i32> %24, <2 x i32> <i32 0, i32 1>
  %26 = shufflevector <4 x i32> %24, <4 x i32> %24, <2 x i32> <i32 2, i32 3>
  %27 = insertvalue [4 x <2 x i32>] zeroinitializer, <2 x i32> %25, 0
  %28 = insertvalue [4 x <2 x i32>] %27, <2 x i32> %26, 1
  %29 = extractvalue [4 x <8 x i8>] %0, 2
  %30 = shufflevector <8 x i8> %29, <8 x i8> %29, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %31 = shufflevector <16 x i8> %30, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %32 = extractvalue [4 x <8 x i8>] %0, 3
  %33 = shufflevector <8 x i8> %32, <8 x i8> %32, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %34 = shufflevector <16 x i8> %33, <16 x i8> %31, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %35 = extractvalue [4 x <2 x i32>] %2, 2
  %36 = shufflevector <2 x i32> %35, <2 x i32> %35, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %37 = shufflevector <4 x i32> %36, <4 x i32> zeroinitializer, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %38 = extractvalue [4 x <2 x i32>] %2, 3
  %39 = shufflevector <2 x i32> %38, <2 x i32> %38, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %40 = shufflevector <4 x i32> %39, <4 x i32> %37, <4 x i32> <i32 4, i32 5, i32 0, i32 1>
  %41 = call <4 x i32> @llvm.aarch64.neon.smmla.v4i32.v16i8(<4 x i32> %40, <16 x i8> %34, <16 x i8> %17)
  %42 = shufflevector <4 x i32> %41, <4 x i32> %41, <2 x i32> <i32 0, i32 1>
  %43 = shufflevector <4 x i32> %41, <4 x i32> %41, <2 x i32> <i32 2, i32 3>
  %44 = insertvalue [4 x <2 x i32>] %28, <2 x i32> %42, 2
  %45 = insertvalue [4 x <2 x i32>] %44, <2 x i32> %43, 3
  ret [4 x <2 x i32>] %45
}

define [4 x <4 x i32>] @vector_arm_neon_unroll_incompatible_shape([4 x <12 x i8>] %0, [4 x <12 x i8>] %1, [4 x <4 x i32>] %2) {
  %4 = extractvalue [4 x <12 x i8>] %0, 0
  %5 = sext <12 x i8> %4 to <12 x i32>
  %6 = extractvalue [4 x <12 x i8>] %0, 1
  %7 = sext <12 x i8> %6 to <12 x i32>
  %8 = extractvalue [4 x <12 x i8>] %0, 2
  %9 = sext <12 x i8> %8 to <12 x i32>
  %10 = extractvalue [4 x <12 x i8>] %0, 3
  %11 = sext <12 x i8> %10 to <12 x i32>
  %12 = extractvalue [4 x <12 x i8>] %1, 0
  %13 = sext <12 x i8> %12 to <12 x i32>
  %14 = extractvalue [4 x <12 x i8>] %1, 1
  %15 = sext <12 x i8> %14 to <12 x i32>
  %16 = extractvalue [4 x <12 x i8>] %1, 2
  %17 = sext <12 x i8> %16 to <12 x i32>
  %18 = extractvalue [4 x <12 x i8>] %1, 3
  %19 = sext <12 x i8> %18 to <12 x i32>
  %20 = mul <12 x i32> %5, %13
  %21 = call i32 @llvm.vector.reduce.add.v12i32(<12 x i32> %20)
  %22 = insertelement <4 x i32> zeroinitializer, i32 %21, i64 0
  %23 = mul <12 x i32> %5, %15
  %24 = call i32 @llvm.vector.reduce.add.v12i32(<12 x i32> %23)
  %25 = insertelement <4 x i32> %22, i32 %24, i64 1
  %26 = mul <12 x i32> %5, %17
  %27 = call i32 @llvm.vector.reduce.add.v12i32(<12 x i32> %26)
  %28 = insertelement <4 x i32> %25, i32 %27, i64 2
  %29 = mul <12 x i32> %5, %19
  %30 = call i32 @llvm.vector.reduce.add.v12i32(<12 x i32> %29)
  %31 = insertelement <4 x i32> %28, i32 %30, i64 3
  %32 = mul <12 x i32> %7, %13
  %33 = call i32 @llvm.vector.reduce.add.v12i32(<12 x i32> %32)
  %34 = insertelement <4 x i32> zeroinitializer, i32 %33, i64 0
  %35 = mul <12 x i32> %7, %15
  %36 = call i32 @llvm.vector.reduce.add.v12i32(<12 x i32> %35)
  %37 = insertelement <4 x i32> %34, i32 %36, i64 1
  %38 = mul <12 x i32> %7, %17
  %39 = call i32 @llvm.vector.reduce.add.v12i32(<12 x i32> %38)
  %40 = insertelement <4 x i32> %37, i32 %39, i64 2
  %41 = mul <12 x i32> %7, %19
  %42 = call i32 @llvm.vector.reduce.add.v12i32(<12 x i32> %41)
  %43 = insertelement <4 x i32> %40, i32 %42, i64 3
  %44 = mul <12 x i32> %9, %13
  %45 = call i32 @llvm.vector.reduce.add.v12i32(<12 x i32> %44)
  %46 = insertelement <4 x i32> zeroinitializer, i32 %45, i64 0
  %47 = mul <12 x i32> %9, %15
  %48 = call i32 @llvm.vector.reduce.add.v12i32(<12 x i32> %47)
  %49 = insertelement <4 x i32> %46, i32 %48, i64 1
  %50 = mul <12 x i32> %9, %17
  %51 = call i32 @llvm.vector.reduce.add.v12i32(<12 x i32> %50)
  %52 = insertelement <4 x i32> %49, i32 %51, i64 2
  %53 = mul <12 x i32> %9, %19
  %54 = call i32 @llvm.vector.reduce.add.v12i32(<12 x i32> %53)
  %55 = insertelement <4 x i32> %52, i32 %54, i64 3
  %56 = mul <12 x i32> %11, %13
  %57 = call i32 @llvm.vector.reduce.add.v12i32(<12 x i32> %56)
  %58 = insertelement <4 x i32> zeroinitializer, i32 %57, i64 0
  %59 = mul <12 x i32> %11, %15
  %60 = call i32 @llvm.vector.reduce.add.v12i32(<12 x i32> %59)
  %61 = insertelement <4 x i32> %58, i32 %60, i64 1
  %62 = mul <12 x i32> %11, %17
  %63 = call i32 @llvm.vector.reduce.add.v12i32(<12 x i32> %62)
  %64 = insertelement <4 x i32> %61, i32 %63, i64 2
  %65 = mul <12 x i32> %11, %19
  %66 = call i32 @llvm.vector.reduce.add.v12i32(<12 x i32> %65)
  %67 = insertelement <4 x i32> %64, i32 %66, i64 3
  %68 = extractvalue [4 x <4 x i32>] %2, 0
  %69 = add <4 x i32> %31, %68
  %70 = insertvalue [4 x <4 x i32>] undef, <4 x i32> %69, 0
  %71 = extractvalue [4 x <4 x i32>] %2, 1
  %72 = add <4 x i32> %43, %71
  %73 = insertvalue [4 x <4 x i32>] %70, <4 x i32> %72, 1
  %74 = extractvalue [4 x <4 x i32>] %2, 2
  %75 = add <4 x i32> %55, %74
  %76 = insertvalue [4 x <4 x i32>] %73, <4 x i32> %75, 2
  %77 = extractvalue [4 x <4 x i32>] %2, 3
  %78 = add <4 x i32> %67, %77
  %79 = insertvalue [4 x <4 x i32>] %76, <4 x i32> %78, 3
  ret [4 x <4 x i32>] %79
}

define <8 x i32> @vector_arm_neon_vecmat_unroll(<8 x i8> %0, [8 x <8 x i8>] %1, <8 x i32> %2) {
  %4 = shufflevector <8 x i32> %2, <8 x i32> %2, <2 x i32> <i32 0, i32 1>
  %5 = shufflevector <8 x i8> %0, <8 x i8> %0, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %6 = shufflevector <16 x i8> %5, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7 = shufflevector <16 x i8> zeroinitializer, <16 x i8> %6, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %8 = extractvalue [8 x <8 x i8>] %1, 0
  %9 = shufflevector <8 x i8> %8, <8 x i8> %8, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %10 = shufflevector <16 x i8> %9, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %11 = extractvalue [8 x <8 x i8>] %1, 1
  %12 = shufflevector <8 x i8> %11, <8 x i8> %11, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %13 = shufflevector <16 x i8> %12, <16 x i8> %10, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %14 = shufflevector <2 x i32> %4, <2 x i32> %4, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %15 = shufflevector <4 x i32> %14, <4 x i32> zeroinitializer, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %16 = shufflevector <4 x i32> zeroinitializer, <4 x i32> %15, <4 x i32> <i32 4, i32 5, i32 0, i32 1>
  %17 = call <4 x i32> @llvm.aarch64.neon.smmla.v4i32.v16i8(<4 x i32> %16, <16 x i8> %7, <16 x i8> %13)
  %18 = shufflevector <4 x i32> %17, <4 x i32> %17, <2 x i32> <i32 0, i32 1>
  %19 = shufflevector <2 x i32> %18, <2 x i32> %18, <8 x i32> <i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %20 = shufflevector <8 x i32> %19, <8 x i32> zeroinitializer, <8 x i32> <i32 0, i32 1, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %21 = shufflevector <8 x i32> %2, <8 x i32> %2, <2 x i32> <i32 2, i32 3>
  %22 = extractvalue [8 x <8 x i8>] %1, 2
  %23 = shufflevector <8 x i8> %22, <8 x i8> %22, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %24 = shufflevector <16 x i8> %23, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %25 = extractvalue [8 x <8 x i8>] %1, 3
  %26 = shufflevector <8 x i8> %25, <8 x i8> %25, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %27 = shufflevector <16 x i8> %26, <16 x i8> %24, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %28 = shufflevector <2 x i32> %21, <2 x i32> %21, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %29 = shufflevector <4 x i32> %28, <4 x i32> zeroinitializer, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %30 = shufflevector <4 x i32> zeroinitializer, <4 x i32> %29, <4 x i32> <i32 4, i32 5, i32 0, i32 1>
  %31 = call <4 x i32> @llvm.aarch64.neon.smmla.v4i32.v16i8(<4 x i32> %30, <16 x i8> %7, <16 x i8> %27)
  %32 = shufflevector <4 x i32> %31, <4 x i32> %31, <2 x i32> <i32 0, i32 1>
  %33 = shufflevector <2 x i32> %32, <2 x i32> %32, <8 x i32> <i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %34 = shufflevector <8 x i32> %33, <8 x i32> %20, <8 x i32> <i32 8, i32 9, i32 0, i32 1, i32 12, i32 13, i32 14, i32 15>
  %35 = shufflevector <8 x i32> %2, <8 x i32> %2, <2 x i32> <i32 4, i32 5>
  %36 = extractvalue [8 x <8 x i8>] %1, 4
  %37 = shufflevector <8 x i8> %36, <8 x i8> %36, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %38 = shufflevector <16 x i8> %37, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %39 = extractvalue [8 x <8 x i8>] %1, 5
  %40 = shufflevector <8 x i8> %39, <8 x i8> %39, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %41 = shufflevector <16 x i8> %40, <16 x i8> %38, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %42 = shufflevector <2 x i32> %35, <2 x i32> %35, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %43 = shufflevector <4 x i32> %42, <4 x i32> zeroinitializer, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %44 = shufflevector <4 x i32> zeroinitializer, <4 x i32> %43, <4 x i32> <i32 4, i32 5, i32 0, i32 1>
  %45 = call <4 x i32> @llvm.aarch64.neon.smmla.v4i32.v16i8(<4 x i32> %44, <16 x i8> %7, <16 x i8> %41)
  %46 = shufflevector <4 x i32> %45, <4 x i32> %45, <2 x i32> <i32 0, i32 1>
  %47 = shufflevector <2 x i32> %46, <2 x i32> %46, <8 x i32> <i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %48 = shufflevector <8 x i32> %47, <8 x i32> %34, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 0, i32 1, i32 14, i32 15>
  %49 = shufflevector <8 x i32> %2, <8 x i32> %2, <2 x i32> <i32 6, i32 7>
  %50 = extractvalue [8 x <8 x i8>] %1, 6
  %51 = shufflevector <8 x i8> %50, <8 x i8> %50, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %52 = shufflevector <16 x i8> %51, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %53 = extractvalue [8 x <8 x i8>] %1, 7
  %54 = shufflevector <8 x i8> %53, <8 x i8> %53, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %55 = shufflevector <16 x i8> %54, <16 x i8> %52, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %56 = shufflevector <2 x i32> %49, <2 x i32> %49, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %57 = shufflevector <4 x i32> %56, <4 x i32> zeroinitializer, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %58 = shufflevector <4 x i32> zeroinitializer, <4 x i32> %57, <4 x i32> <i32 4, i32 5, i32 0, i32 1>
  %59 = call <4 x i32> @llvm.aarch64.neon.smmla.v4i32.v16i8(<4 x i32> %58, <16 x i8> %7, <16 x i8> %55)
  %60 = shufflevector <4 x i32> %59, <4 x i32> %59, <2 x i32> <i32 0, i32 1>
  %61 = shufflevector <2 x i32> %60, <2 x i32> %60, <8 x i32> <i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %62 = shufflevector <8 x i32> %61, <8 x i32> %48, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 0, i32 1>
  ret <8 x i32> %62
}

define [1 x <8 x i32>] @vector_arm_neon_vecmat_unroll_leading_dim([1 x <8 x i8>] %0, [8 x <8 x i8>] %1, [1 x <8 x i32>] %2) {
  %4 = extractvalue [1 x <8 x i32>] %2, 0
  %5 = shufflevector <8 x i32> %4, <8 x i32> %4, <2 x i32> <i32 0, i32 1>
  %6 = extractvalue [1 x <8 x i8>] %0, 0
  %7 = shufflevector <8 x i8> %6, <8 x i8> %6, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %8 = shufflevector <16 x i8> %7, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %9 = shufflevector <16 x i8> zeroinitializer, <16 x i8> %8, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %10 = extractvalue [8 x <8 x i8>] %1, 0
  %11 = shufflevector <8 x i8> %10, <8 x i8> %10, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %12 = shufflevector <16 x i8> %11, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %13 = extractvalue [8 x <8 x i8>] %1, 1
  %14 = shufflevector <8 x i8> %13, <8 x i8> %13, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %15 = shufflevector <16 x i8> %14, <16 x i8> %12, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %16 = shufflevector <2 x i32> %5, <2 x i32> %5, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %17 = shufflevector <4 x i32> %16, <4 x i32> zeroinitializer, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %18 = shufflevector <4 x i32> zeroinitializer, <4 x i32> %17, <4 x i32> <i32 4, i32 5, i32 0, i32 1>
  %19 = call <4 x i32> @llvm.aarch64.neon.smmla.v4i32.v16i8(<4 x i32> %18, <16 x i8> %9, <16 x i8> %15)
  %20 = shufflevector <4 x i32> %19, <4 x i32> %19, <2 x i32> <i32 0, i32 1>
  %21 = shufflevector <2 x i32> %20, <2 x i32> %20, <8 x i32> <i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %22 = shufflevector <8 x i32> %21, <8 x i32> zeroinitializer, <8 x i32> <i32 0, i32 1, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %23 = insertvalue [1 x <8 x i32>] zeroinitializer, <8 x i32> %22, 0
  %24 = shufflevector <8 x i32> %4, <8 x i32> %4, <2 x i32> <i32 2, i32 3>
  %25 = extractvalue [8 x <8 x i8>] %1, 2
  %26 = shufflevector <8 x i8> %25, <8 x i8> %25, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %27 = shufflevector <16 x i8> %26, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %28 = extractvalue [8 x <8 x i8>] %1, 3
  %29 = shufflevector <8 x i8> %28, <8 x i8> %28, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %30 = shufflevector <16 x i8> %29, <16 x i8> %27, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %31 = shufflevector <2 x i32> %24, <2 x i32> %24, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %32 = shufflevector <4 x i32> %31, <4 x i32> zeroinitializer, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %33 = shufflevector <4 x i32> zeroinitializer, <4 x i32> %32, <4 x i32> <i32 4, i32 5, i32 0, i32 1>
  %34 = call <4 x i32> @llvm.aarch64.neon.smmla.v4i32.v16i8(<4 x i32> %33, <16 x i8> %9, <16 x i8> %30)
  %35 = shufflevector <4 x i32> %34, <4 x i32> %34, <2 x i32> <i32 0, i32 1>
  %36 = shufflevector <2 x i32> %35, <2 x i32> %35, <8 x i32> <i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %37 = shufflevector <8 x i32> %36, <8 x i32> %22, <8 x i32> <i32 8, i32 9, i32 0, i32 1, i32 12, i32 13, i32 14, i32 15>
  %38 = insertvalue [1 x <8 x i32>] %23, <8 x i32> %37, 0
  %39 = shufflevector <8 x i32> %4, <8 x i32> %4, <2 x i32> <i32 4, i32 5>
  %40 = extractvalue [8 x <8 x i8>] %1, 4
  %41 = shufflevector <8 x i8> %40, <8 x i8> %40, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %42 = shufflevector <16 x i8> %41, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %43 = extractvalue [8 x <8 x i8>] %1, 5
  %44 = shufflevector <8 x i8> %43, <8 x i8> %43, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %45 = shufflevector <16 x i8> %44, <16 x i8> %42, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %46 = shufflevector <2 x i32> %39, <2 x i32> %39, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %47 = shufflevector <4 x i32> %46, <4 x i32> zeroinitializer, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %48 = shufflevector <4 x i32> zeroinitializer, <4 x i32> %47, <4 x i32> <i32 4, i32 5, i32 0, i32 1>
  %49 = call <4 x i32> @llvm.aarch64.neon.smmla.v4i32.v16i8(<4 x i32> %48, <16 x i8> %9, <16 x i8> %45)
  %50 = shufflevector <4 x i32> %49, <4 x i32> %49, <2 x i32> <i32 0, i32 1>
  %51 = shufflevector <2 x i32> %50, <2 x i32> %50, <8 x i32> <i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %52 = shufflevector <8 x i32> %51, <8 x i32> %37, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 0, i32 1, i32 14, i32 15>
  %53 = insertvalue [1 x <8 x i32>] %38, <8 x i32> %52, 0
  %54 = shufflevector <8 x i32> %4, <8 x i32> %4, <2 x i32> <i32 6, i32 7>
  %55 = extractvalue [8 x <8 x i8>] %1, 6
  %56 = shufflevector <8 x i8> %55, <8 x i8> %55, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %57 = shufflevector <16 x i8> %56, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %58 = extractvalue [8 x <8 x i8>] %1, 7
  %59 = shufflevector <8 x i8> %58, <8 x i8> %58, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %60 = shufflevector <16 x i8> %59, <16 x i8> %57, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %61 = shufflevector <2 x i32> %54, <2 x i32> %54, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %62 = shufflevector <4 x i32> %61, <4 x i32> zeroinitializer, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %63 = shufflevector <4 x i32> zeroinitializer, <4 x i32> %62, <4 x i32> <i32 4, i32 5, i32 0, i32 1>
  %64 = call <4 x i32> @llvm.aarch64.neon.smmla.v4i32.v16i8(<4 x i32> %63, <16 x i8> %9, <16 x i8> %60)
  %65 = shufflevector <4 x i32> %64, <4 x i32> %64, <2 x i32> <i32 0, i32 1>
  %66 = shufflevector <2 x i32> %65, <2 x i32> %65, <8 x i32> <i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %67 = shufflevector <8 x i32> %66, <8 x i32> %52, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 0, i32 1>
  %68 = insertvalue [1 x <8 x i32>] %53, <8 x i32> %67, 0
  ret [1 x <8 x i32>] %68
}

define <8 x i32> @vector_arm_neon_matvec([8 x <8 x i8>] %0, <8 x i8> %1, <8 x i32> %2) {
  %4 = sext <8 x i8> %1 to <8 x i32>
  %5 = extractvalue [8 x <8 x i8>] %0, 0
  %6 = sext <8 x i8> %5 to <8 x i32>
  %7 = extractvalue [8 x <8 x i8>] %0, 1
  %8 = sext <8 x i8> %7 to <8 x i32>
  %9 = extractvalue [8 x <8 x i8>] %0, 2
  %10 = sext <8 x i8> %9 to <8 x i32>
  %11 = extractvalue [8 x <8 x i8>] %0, 3
  %12 = sext <8 x i8> %11 to <8 x i32>
  %13 = extractvalue [8 x <8 x i8>] %0, 4
  %14 = sext <8 x i8> %13 to <8 x i32>
  %15 = extractvalue [8 x <8 x i8>] %0, 5
  %16 = sext <8 x i8> %15 to <8 x i32>
  %17 = extractvalue [8 x <8 x i8>] %0, 6
  %18 = sext <8 x i8> %17 to <8 x i32>
  %19 = extractvalue [8 x <8 x i8>] %0, 7
  %20 = sext <8 x i8> %19 to <8 x i32>
  %21 = mul <8 x i32> %6, %4
  %22 = call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %21)
  %23 = insertelement <8 x i32> zeroinitializer, i32 %22, i64 0
  %24 = mul <8 x i32> %8, %4
  %25 = call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %24)
  %26 = insertelement <8 x i32> %23, i32 %25, i64 1
  %27 = mul <8 x i32> %10, %4
  %28 = call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %27)
  %29 = insertelement <8 x i32> %26, i32 %28, i64 2
  %30 = mul <8 x i32> %12, %4
  %31 = call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %30)
  %32 = insertelement <8 x i32> %29, i32 %31, i64 3
  %33 = mul <8 x i32> %14, %4
  %34 = call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %33)
  %35 = insertelement <8 x i32> %32, i32 %34, i64 4
  %36 = mul <8 x i32> %16, %4
  %37 = call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %36)
  %38 = insertelement <8 x i32> %35, i32 %37, i64 5
  %39 = mul <8 x i32> %18, %4
  %40 = call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %39)
  %41 = insertelement <8 x i32> %38, i32 %40, i64 6
  %42 = mul <8 x i32> %20, %4
  %43 = call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %42)
  %44 = insertelement <8 x i32> %41, i32 %43, i64 7
  %45 = add <8 x i32> %44, %2
  ret <8 x i32> %45
}

define [2 x <2 x i32>] @vector_arm_neon_k_unroll([2 x <16 x i8>] %0, [2 x <16 x i4>] %1, [2 x <2 x i32>] %2) {
  %4 = extractvalue [2 x <16 x i4>] %1, 0
  %5 = sext <16 x i4> %4 to <16 x i8>
  %6 = extractvalue [2 x <16 x i4>] %1, 1
  %7 = sext <16 x i4> %6 to <16 x i8>
  %8 = extractvalue [2 x <16 x i8>] %0, 0
  %9 = shufflevector <16 x i8> %8, <16 x i8> %8, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %10 = extractvalue [2 x <16 x i8>] %0, 1
  %11 = shufflevector <16 x i8> %10, <16 x i8> %10, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %12 = shufflevector <16 x i8> %5, <16 x i8> %5, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %13 = shufflevector <16 x i8> %7, <16 x i8> %7, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %14 = shufflevector <8 x i8> %9, <8 x i8> %9, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %15 = shufflevector <16 x i8> %14, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %16 = shufflevector <8 x i8> %11, <8 x i8> %11, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %17 = shufflevector <16 x i8> %16, <16 x i8> %15, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %18 = shufflevector <8 x i8> %12, <8 x i8> %12, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %19 = shufflevector <16 x i8> %18, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %20 = shufflevector <8 x i8> %13, <8 x i8> %13, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %21 = shufflevector <16 x i8> %20, <16 x i8> %19, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %22 = extractvalue [2 x <2 x i32>] %2, 0
  %23 = shufflevector <2 x i32> %22, <2 x i32> %22, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %24 = shufflevector <4 x i32> %23, <4 x i32> zeroinitializer, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %25 = extractvalue [2 x <2 x i32>] %2, 1
  %26 = shufflevector <2 x i32> %25, <2 x i32> %25, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %27 = shufflevector <4 x i32> %26, <4 x i32> %24, <4 x i32> <i32 4, i32 5, i32 0, i32 1>
  %28 = call <4 x i32> @llvm.aarch64.neon.smmla.v4i32.v16i8(<4 x i32> %27, <16 x i8> %17, <16 x i8> %21)
  %29 = shufflevector <16 x i8> %8, <16 x i8> %8, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %30 = shufflevector <16 x i8> %10, <16 x i8> %10, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %31 = shufflevector <16 x i8> %5, <16 x i8> %5, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %32 = shufflevector <16 x i8> %7, <16 x i8> %7, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %33 = shufflevector <8 x i8> %29, <8 x i8> %29, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %34 = shufflevector <16 x i8> %33, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %35 = shufflevector <8 x i8> %30, <8 x i8> %30, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %36 = shufflevector <16 x i8> %35, <16 x i8> %34, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %37 = shufflevector <8 x i8> %31, <8 x i8> %31, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %38 = shufflevector <16 x i8> %37, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %39 = shufflevector <8 x i8> %32, <8 x i8> %32, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %40 = shufflevector <16 x i8> %39, <16 x i8> %38, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %41 = call <4 x i32> @llvm.aarch64.neon.smmla.v4i32.v16i8(<4 x i32> %28, <16 x i8> %36, <16 x i8> %40)
  %42 = shufflevector <4 x i32> %41, <4 x i32> %41, <2 x i32> <i32 0, i32 1>
  %43 = insertvalue [2 x <2 x i32>] zeroinitializer, <2 x i32> %42, 0
  %44 = shufflevector <4 x i32> %41, <4 x i32> %41, <2 x i32> <i32 2, i32 3>
  %45 = insertvalue [2 x <2 x i32>] %43, <2 x i32> %44, 1
  ret [2 x <2 x i32>] %45
}

define [1 x <2 x i32>] @vector_arm_neon_k_unroll_vecmat([1 x <32 x i8>] %0, [2 x <32 x i4>] %1, [1 x <2 x i32>] %2) {
  %4 = extractvalue [2 x <32 x i4>] %1, 0
  %5 = sext <32 x i4> %4 to <32 x i8>
  %6 = extractvalue [2 x <32 x i4>] %1, 1
  %7 = sext <32 x i4> %6 to <32 x i8>
  %8 = extractvalue [1 x <32 x i8>] %0, 0
  %9 = shufflevector <32 x i8> %8, <32 x i8> %8, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %10 = shufflevector <32 x i8> %5, <32 x i8> %5, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %11 = shufflevector <32 x i8> %7, <32 x i8> %7, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %12 = shufflevector <8 x i8> %9, <8 x i8> %9, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %13 = shufflevector <16 x i8> %12, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %14 = shufflevector <16 x i8> zeroinitializer, <16 x i8> %13, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %15 = shufflevector <8 x i8> %10, <8 x i8> %10, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %16 = shufflevector <16 x i8> %15, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %17 = shufflevector <8 x i8> %11, <8 x i8> %11, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %18 = shufflevector <16 x i8> %17, <16 x i8> %16, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %19 = extractvalue [1 x <2 x i32>] %2, 0
  %20 = shufflevector <2 x i32> %19, <2 x i32> %19, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %21 = shufflevector <4 x i32> %20, <4 x i32> zeroinitializer, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %22 = shufflevector <4 x i32> zeroinitializer, <4 x i32> %21, <4 x i32> <i32 4, i32 5, i32 0, i32 1>
  %23 = call <4 x i32> @llvm.aarch64.neon.smmla.v4i32.v16i8(<4 x i32> %22, <16 x i8> %14, <16 x i8> %18)
  %24 = shufflevector <4 x i32> %23, <4 x i32> %23, <2 x i32> <i32 0, i32 1>
  %25 = insertvalue [1 x <2 x i32>] zeroinitializer, <2 x i32> %24, 0
  %26 = shufflevector <32 x i8> %8, <32 x i8> %8, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %27 = shufflevector <32 x i8> %5, <32 x i8> %5, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %28 = shufflevector <32 x i8> %7, <32 x i8> %7, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %29 = shufflevector <8 x i8> %26, <8 x i8> %26, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %30 = shufflevector <16 x i8> %29, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %31 = shufflevector <16 x i8> zeroinitializer, <16 x i8> %30, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %32 = shufflevector <8 x i8> %27, <8 x i8> %27, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %33 = shufflevector <16 x i8> %32, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %34 = shufflevector <8 x i8> %28, <8 x i8> %28, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %35 = shufflevector <16 x i8> %34, <16 x i8> %33, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %36 = call <4 x i32> @llvm.aarch64.neon.smmla.v4i32.v16i8(<4 x i32> %23, <16 x i8> %31, <16 x i8> %35)
  %37 = shufflevector <4 x i32> %36, <4 x i32> %36, <2 x i32> <i32 0, i32 1>
  %38 = insertvalue [1 x <2 x i32>] %25, <2 x i32> %37, 0
  %39 = shufflevector <32 x i8> %8, <32 x i8> %8, <8 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %40 = shufflevector <32 x i8> %5, <32 x i8> %5, <8 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %41 = shufflevector <32 x i8> %7, <32 x i8> %7, <8 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %42 = shufflevector <8 x i8> %39, <8 x i8> %39, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %43 = shufflevector <16 x i8> %42, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %44 = shufflevector <16 x i8> zeroinitializer, <16 x i8> %43, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %45 = shufflevector <8 x i8> %40, <8 x i8> %40, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %46 = shufflevector <16 x i8> %45, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %47 = shufflevector <8 x i8> %41, <8 x i8> %41, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %48 = shufflevector <16 x i8> %47, <16 x i8> %46, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %49 = call <4 x i32> @llvm.aarch64.neon.smmla.v4i32.v16i8(<4 x i32> %36, <16 x i8> %44, <16 x i8> %48)
  %50 = shufflevector <4 x i32> %49, <4 x i32> %49, <2 x i32> <i32 0, i32 1>
  %51 = insertvalue [1 x <2 x i32>] %38, <2 x i32> %50, 0
  %52 = shufflevector <32 x i8> %8, <32 x i8> %8, <8 x i32> <i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %53 = shufflevector <32 x i8> %5, <32 x i8> %5, <8 x i32> <i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %54 = shufflevector <32 x i8> %7, <32 x i8> %7, <8 x i32> <i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %55 = shufflevector <8 x i8> %52, <8 x i8> %52, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %56 = shufflevector <16 x i8> %55, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %57 = shufflevector <16 x i8> zeroinitializer, <16 x i8> %56, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %58 = shufflevector <8 x i8> %53, <8 x i8> %53, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %59 = shufflevector <16 x i8> %58, <16 x i8> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %60 = shufflevector <8 x i8> %54, <8 x i8> %54, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %61 = shufflevector <16 x i8> %60, <16 x i8> %59, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %62 = call <4 x i32> @llvm.aarch64.neon.smmla.v4i32.v16i8(<4 x i32> %49, <16 x i8> %57, <16 x i8> %61)
  %63 = shufflevector <4 x i32> %62, <4 x i32> %62, <2 x i32> <i32 0, i32 1>
  %64 = insertvalue [1 x <2 x i32>] %51, <2 x i32> %63, 0
  ret [1 x <2 x i32>] %64
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(none)
declare <4 x i32> @llvm.aarch64.neon.smmla.v4i32.v16i8(<4 x i32>, <16 x i8>, <16 x i8>) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.add.v8i32(<8 x i32>) #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.add.v12i32(<12 x i32>) #1

attributes #0 = { nocallback nofree nosync nounwind willreturn memory(none) }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }

!llvm.module.flags = !{!0}

!0 = !{i32 2, !"Debug Info Version", i32 3}
