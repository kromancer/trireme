module {
  llvm.func @vector_arm_neon_mixed_types(%arg0: !llvm.array<2 x vector<8xi8>>, %arg1: !llvm.array<2 x vector<8xi4>>, %arg2: !llvm.array<2 x vector<2xi32>>) -> !llvm.array<2 x vector<2xi32>> {
    %0 = builtin.unrealized_conversion_cast %arg2 : !llvm.array<2 x vector<2xi32>> to vector<2x2xi32>
    %1 = builtin.unrealized_conversion_cast %arg1 : !llvm.array<2 x vector<8xi4>> to vector<2x8xi4>
    %2 = builtin.unrealized_conversion_cast %arg0 : !llvm.array<2 x vector<8xi8>> to vector<2x8xi8>
    %3 = builtin.unrealized_conversion_cast %1 : vector<2x8xi4> to !llvm.array<2 x vector<8xi4>>
    %4 = builtin.unrealized_conversion_cast %0 : vector<2x2xi32> to !llvm.array<2 x vector<2xi32>>
    %5 = builtin.unrealized_conversion_cast %2 : vector<2x8xi8> to !llvm.array<2 x vector<8xi8>>
    %6 = llvm.mlir.constant(dense<0> : vector<2x2xi32>) : !llvm.array<2 x vector<2xi32>>
    %7 = builtin.unrealized_conversion_cast %6 : !llvm.array<2 x vector<2xi32>> to vector<2x2xi32>
    %8 = builtin.unrealized_conversion_cast %7 : vector<2x2xi32> to !llvm.array<2 x vector<2xi32>>
    %9 = llvm.mlir.constant(dense<0> : vector<4xi32>) : vector<4xi32>
    %10 = llvm.mlir.constant(dense<0> : vector<16xi8>) : vector<16xi8>
    %11 = llvm.mlir.undef : !llvm.array<2 x vector<8xi8>>
    %12 = llvm.extractvalue %3[0] : !llvm.array<2 x vector<8xi4>> 
    %13 = llvm.sext %12 : vector<8xi4> to vector<8xi8>
    %14 = llvm.insertvalue %13, %11[0] : !llvm.array<2 x vector<8xi8>> 
    %15 = llvm.extractvalue %3[1] : !llvm.array<2 x vector<8xi4>> 
    %16 = llvm.sext %15 : vector<8xi4> to vector<8xi8>
    %17 = llvm.insertvalue %16, %14[1] : !llvm.array<2 x vector<8xi8>> 
    %18 = builtin.unrealized_conversion_cast %17 : !llvm.array<2 x vector<8xi8>> to vector<2x8xi8>
    %19 = builtin.unrealized_conversion_cast %18 : vector<2x8xi8> to !llvm.array<2 x vector<8xi8>>
    %20 = llvm.extractvalue %5[0] : !llvm.array<2 x vector<8xi8>> 
    %21 = llvm.shufflevector %20, %20 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %22 = llvm.shufflevector %21, %10 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %23 = llvm.extractvalue %5[1] : !llvm.array<2 x vector<8xi8>> 
    %24 = llvm.shufflevector %23, %23 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %25 = llvm.shufflevector %24, %22 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %26 = llvm.extractvalue %19[0] : !llvm.array<2 x vector<8xi8>> 
    %27 = llvm.shufflevector %26, %26 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %28 = llvm.shufflevector %27, %10 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %29 = llvm.extractvalue %19[1] : !llvm.array<2 x vector<8xi8>> 
    %30 = llvm.shufflevector %29, %29 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %31 = llvm.shufflevector %30, %28 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %32 = llvm.extractvalue %4[0] : !llvm.array<2 x vector<2xi32>> 
    %33 = llvm.shufflevector %32, %32 [0, 1, 0, 0] : vector<2xi32> 
    %34 = llvm.shufflevector %33, %9 [0, 1, 6, 7] : vector<4xi32> 
    %35 = llvm.extractvalue %4[1] : !llvm.array<2 x vector<2xi32>> 
    %36 = llvm.shufflevector %35, %35 [0, 1, 0, 0] : vector<2xi32> 
    %37 = llvm.shufflevector %36, %34 [4, 5, 0, 1] : vector<4xi32> 
    %38 = arm_neon.intr.smmla %37, %25, %31 : vector<16xi8> to vector<4xi32>
    %39 = llvm.shufflevector %38, %38 [0, 1] : vector<4xi32> 
    %40 = llvm.insertvalue %39, %8[0] : !llvm.array<2 x vector<2xi32>> 
    %41 = llvm.shufflevector %38, %38 [2, 3] : vector<4xi32> 
    %42 = llvm.insertvalue %41, %40[1] : !llvm.array<2 x vector<2xi32>> 
    llvm.return %42 : !llvm.array<2 x vector<2xi32>>
  }
  llvm.func @vector_arm_neon_same_types(%arg0: !llvm.array<2 x vector<8xi8>>, %arg1: !llvm.array<2 x vector<8xi8>>, %arg2: !llvm.array<2 x vector<2xi32>>) -> !llvm.array<2 x vector<2xi32>> {
    %0 = builtin.unrealized_conversion_cast %arg2 : !llvm.array<2 x vector<2xi32>> to vector<2x2xi32>
    %1 = builtin.unrealized_conversion_cast %arg1 : !llvm.array<2 x vector<8xi8>> to vector<2x8xi8>
    %2 = builtin.unrealized_conversion_cast %arg0 : !llvm.array<2 x vector<8xi8>> to vector<2x8xi8>
    %3 = builtin.unrealized_conversion_cast %0 : vector<2x2xi32> to !llvm.array<2 x vector<2xi32>>
    %4 = builtin.unrealized_conversion_cast %1 : vector<2x8xi8> to !llvm.array<2 x vector<8xi8>>
    %5 = builtin.unrealized_conversion_cast %2 : vector<2x8xi8> to !llvm.array<2 x vector<8xi8>>
    %6 = llvm.mlir.constant(dense<0> : vector<2x2xi32>) : !llvm.array<2 x vector<2xi32>>
    %7 = builtin.unrealized_conversion_cast %6 : !llvm.array<2 x vector<2xi32>> to vector<2x2xi32>
    %8 = builtin.unrealized_conversion_cast %7 : vector<2x2xi32> to !llvm.array<2 x vector<2xi32>>
    %9 = llvm.mlir.constant(dense<0> : vector<4xi32>) : vector<4xi32>
    %10 = llvm.mlir.constant(dense<0> : vector<16xi8>) : vector<16xi8>
    %11 = llvm.extractvalue %5[0] : !llvm.array<2 x vector<8xi8>> 
    %12 = llvm.shufflevector %11, %11 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %13 = llvm.shufflevector %12, %10 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %14 = llvm.extractvalue %5[1] : !llvm.array<2 x vector<8xi8>> 
    %15 = llvm.shufflevector %14, %14 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %16 = llvm.shufflevector %15, %13 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %17 = llvm.extractvalue %4[0] : !llvm.array<2 x vector<8xi8>> 
    %18 = llvm.shufflevector %17, %17 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %19 = llvm.shufflevector %18, %10 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %20 = llvm.extractvalue %4[1] : !llvm.array<2 x vector<8xi8>> 
    %21 = llvm.shufflevector %20, %20 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %22 = llvm.shufflevector %21, %19 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %23 = llvm.extractvalue %3[0] : !llvm.array<2 x vector<2xi32>> 
    %24 = llvm.shufflevector %23, %23 [0, 1, 0, 0] : vector<2xi32> 
    %25 = llvm.shufflevector %24, %9 [0, 1, 6, 7] : vector<4xi32> 
    %26 = llvm.extractvalue %3[1] : !llvm.array<2 x vector<2xi32>> 
    %27 = llvm.shufflevector %26, %26 [0, 1, 0, 0] : vector<2xi32> 
    %28 = llvm.shufflevector %27, %25 [4, 5, 0, 1] : vector<4xi32> 
    %29 = arm_neon.intr.smmla %28, %16, %22 : vector<16xi8> to vector<4xi32>
    %30 = llvm.shufflevector %29, %29 [0, 1] : vector<4xi32> 
    %31 = llvm.insertvalue %30, %8[0] : !llvm.array<2 x vector<2xi32>> 
    %32 = llvm.shufflevector %29, %29 [2, 3] : vector<4xi32> 
    %33 = llvm.insertvalue %32, %31[1] : !llvm.array<2 x vector<2xi32>> 
    llvm.return %33 : !llvm.array<2 x vector<2xi32>>
  }
  llvm.func @vector_arm_neon_without_extsi(%arg0: !llvm.array<2 x vector<8xi32>>, %arg1: !llvm.array<2 x vector<8xi32>>, %arg2: !llvm.array<2 x vector<2xi32>>) -> !llvm.array<2 x vector<2xi32>> {
    %0 = builtin.unrealized_conversion_cast %arg2 : !llvm.array<2 x vector<2xi32>> to vector<2x2xi32>
    %1 = builtin.unrealized_conversion_cast %arg1 : !llvm.array<2 x vector<8xi32>> to vector<2x8xi32>
    %2 = builtin.unrealized_conversion_cast %arg0 : !llvm.array<2 x vector<8xi32>> to vector<2x8xi32>
    %3 = builtin.unrealized_conversion_cast %0 : vector<2x2xi32> to !llvm.array<2 x vector<2xi32>>
    %4 = builtin.unrealized_conversion_cast %1 : vector<2x8xi32> to !llvm.array<2 x vector<8xi32>>
    %5 = builtin.unrealized_conversion_cast %2 : vector<2x8xi32> to !llvm.array<2 x vector<8xi32>>
    %6 = llvm.mlir.constant(dense<0> : vector<2x2xi32>) : !llvm.array<2 x vector<2xi32>>
    %7 = builtin.unrealized_conversion_cast %6 : !llvm.array<2 x vector<2xi32>> to vector<2x2xi32>
    %8 = builtin.unrealized_conversion_cast %7 : vector<2x2xi32> to !llvm.array<2 x vector<2xi32>>
    %9 = llvm.extractvalue %5[0] : !llvm.array<2 x vector<8xi32>> 
    %10 = llvm.extractvalue %4[0] : !llvm.array<2 x vector<8xi32>> 
    %11 = llvm.mul %9, %10 : vector<8xi32>
    %12 = "llvm.intr.vector.reduce.add"(%11) : (vector<8xi32>) -> i32
    %13 = llvm.extractvalue %8[0] : !llvm.array<2 x vector<2xi32>> 
    %14 = llvm.mlir.constant(0 : i64) : i64
    %15 = llvm.insertelement %12, %13[%14 : i64] : vector<2xi32>
    %16 = llvm.insertvalue %15, %8[0] : !llvm.array<2 x vector<2xi32>> 
    %17 = llvm.extractvalue %4[1] : !llvm.array<2 x vector<8xi32>> 
    %18 = llvm.mul %9, %17 : vector<8xi32>
    %19 = "llvm.intr.vector.reduce.add"(%18) : (vector<8xi32>) -> i32
    %20 = llvm.extractvalue %16[0] : !llvm.array<2 x vector<2xi32>> 
    %21 = llvm.mlir.constant(1 : i64) : i64
    %22 = llvm.insertelement %19, %20[%21 : i64] : vector<2xi32>
    %23 = llvm.insertvalue %22, %16[0] : !llvm.array<2 x vector<2xi32>> 
    %24 = llvm.extractvalue %5[1] : !llvm.array<2 x vector<8xi32>> 
    %25 = llvm.extractvalue %4[0] : !llvm.array<2 x vector<8xi32>> 
    %26 = llvm.mul %24, %25 : vector<8xi32>
    %27 = "llvm.intr.vector.reduce.add"(%26) : (vector<8xi32>) -> i32
    %28 = llvm.extractvalue %23[1] : !llvm.array<2 x vector<2xi32>> 
    %29 = llvm.mlir.constant(0 : i64) : i64
    %30 = llvm.insertelement %27, %28[%29 : i64] : vector<2xi32>
    %31 = llvm.insertvalue %30, %23[1] : !llvm.array<2 x vector<2xi32>> 
    %32 = llvm.extractvalue %4[1] : !llvm.array<2 x vector<8xi32>> 
    %33 = llvm.mul %24, %32 : vector<8xi32>
    %34 = "llvm.intr.vector.reduce.add"(%33) : (vector<8xi32>) -> i32
    %35 = llvm.extractvalue %31[1] : !llvm.array<2 x vector<2xi32>> 
    %36 = llvm.mlir.constant(1 : i64) : i64
    %37 = llvm.insertelement %34, %35[%36 : i64] : vector<2xi32>
    %38 = llvm.insertvalue %37, %31[1] : !llvm.array<2 x vector<2xi32>> 
    %39 = llvm.mlir.undef : !llvm.array<2 x vector<2xi32>>
    %40 = llvm.extractvalue %38[0] : !llvm.array<2 x vector<2xi32>> 
    %41 = llvm.extractvalue %3[0] : !llvm.array<2 x vector<2xi32>> 
    %42 = llvm.add %40, %41 : vector<2xi32>
    %43 = llvm.insertvalue %42, %39[0] : !llvm.array<2 x vector<2xi32>> 
    %44 = llvm.extractvalue %38[1] : !llvm.array<2 x vector<2xi32>> 
    %45 = llvm.extractvalue %3[1] : !llvm.array<2 x vector<2xi32>> 
    %46 = llvm.add %44, %45 : vector<2xi32>
    %47 = llvm.insertvalue %46, %43[1] : !llvm.array<2 x vector<2xi32>> 
    llvm.return %47 : !llvm.array<2 x vector<2xi32>>
  }
  llvm.func @vector_arm_neon_unroll(%arg0: !llvm.array<4 x vector<8xi8>>, %arg1: !llvm.array<4 x vector<8xi8>>, %arg2: !llvm.array<4 x vector<4xi32>>) -> !llvm.array<4 x vector<4xi32>> {
    %0 = builtin.unrealized_conversion_cast %arg2 : !llvm.array<4 x vector<4xi32>> to vector<4x4xi32>
    %1 = builtin.unrealized_conversion_cast %arg1 : !llvm.array<4 x vector<8xi8>> to vector<4x8xi8>
    %2 = builtin.unrealized_conversion_cast %arg0 : !llvm.array<4 x vector<8xi8>> to vector<4x8xi8>
    %3 = builtin.unrealized_conversion_cast %1 : vector<4x8xi8> to !llvm.array<4 x vector<8xi8>>
    %4 = builtin.unrealized_conversion_cast %2 : vector<4x8xi8> to !llvm.array<4 x vector<8xi8>>
    %5 = builtin.unrealized_conversion_cast %0 : vector<4x4xi32> to !llvm.array<4 x vector<4xi32>>
    %6 = llvm.mlir.constant(dense<0> : vector<4xi32>) : vector<4xi32>
    %7 = llvm.mlir.constant(dense<0> : vector<16xi8>) : vector<16xi8>
    %8 = llvm.mlir.constant(dense<0> : vector<4x4xi32>) : !llvm.array<4 x vector<4xi32>>
    %9 = builtin.unrealized_conversion_cast %8 : !llvm.array<4 x vector<4xi32>> to vector<4x4xi32>
    %10 = builtin.unrealized_conversion_cast %9 : vector<4x4xi32> to !llvm.array<4 x vector<4xi32>>
    %11 = llvm.extractvalue %5[0] : !llvm.array<4 x vector<4xi32>> 
    %12 = llvm.shufflevector %11, %11 [0, 1] : vector<4xi32> 
    %13 = llvm.extractvalue %5[1] : !llvm.array<4 x vector<4xi32>> 
    %14 = llvm.shufflevector %13, %13 [0, 1] : vector<4xi32> 
    %15 = llvm.extractvalue %4[0] : !llvm.array<4 x vector<8xi8>> 
    %16 = llvm.shufflevector %15, %15 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %17 = llvm.shufflevector %16, %7 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %18 = llvm.extractvalue %4[1] : !llvm.array<4 x vector<8xi8>> 
    %19 = llvm.shufflevector %18, %18 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %20 = llvm.shufflevector %19, %17 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %21 = llvm.extractvalue %3[0] : !llvm.array<4 x vector<8xi8>> 
    %22 = llvm.shufflevector %21, %21 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %23 = llvm.shufflevector %22, %7 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %24 = llvm.extractvalue %3[1] : !llvm.array<4 x vector<8xi8>> 
    %25 = llvm.shufflevector %24, %24 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %26 = llvm.shufflevector %25, %23 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %27 = llvm.shufflevector %12, %12 [0, 1, 0, 0] : vector<2xi32> 
    %28 = llvm.shufflevector %27, %6 [0, 1, 6, 7] : vector<4xi32> 
    %29 = llvm.shufflevector %14, %14 [0, 1, 0, 0] : vector<2xi32> 
    %30 = llvm.shufflevector %29, %28 [4, 5, 0, 1] : vector<4xi32> 
    %31 = arm_neon.intr.smmla %30, %20, %26 : vector<16xi8> to vector<4xi32>
    %32 = llvm.shufflevector %31, %31 [0, 1] : vector<4xi32> 
    %33 = llvm.shufflevector %31, %31 [2, 3] : vector<4xi32> 
    %34 = llvm.extractvalue %10[0] : !llvm.array<4 x vector<4xi32>> 
    %35 = llvm.shufflevector %32, %32 [0, 1, 0, 0] : vector<2xi32> 
    %36 = llvm.shufflevector %35, %34 [0, 1, 6, 7] : vector<4xi32> 
    %37 = llvm.insertvalue %36, %10[0] : !llvm.array<4 x vector<4xi32>> 
    %38 = llvm.extractvalue %10[1] : !llvm.array<4 x vector<4xi32>> 
    %39 = llvm.shufflevector %33, %33 [0, 1, 0, 0] : vector<2xi32> 
    %40 = llvm.shufflevector %39, %38 [0, 1, 6, 7] : vector<4xi32> 
    %41 = llvm.insertvalue %40, %37[1] : !llvm.array<4 x vector<4xi32>> 
    %42 = llvm.extractvalue %5[0] : !llvm.array<4 x vector<4xi32>> 
    %43 = llvm.shufflevector %42, %42 [2, 3] : vector<4xi32> 
    %44 = llvm.extractvalue %5[1] : !llvm.array<4 x vector<4xi32>> 
    %45 = llvm.shufflevector %44, %44 [2, 3] : vector<4xi32> 
    %46 = llvm.extractvalue %4[0] : !llvm.array<4 x vector<8xi8>> 
    %47 = llvm.shufflevector %46, %46 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %48 = llvm.shufflevector %47, %7 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %49 = llvm.extractvalue %4[1] : !llvm.array<4 x vector<8xi8>> 
    %50 = llvm.shufflevector %49, %49 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %51 = llvm.shufflevector %50, %48 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %52 = llvm.extractvalue %3[2] : !llvm.array<4 x vector<8xi8>> 
    %53 = llvm.shufflevector %52, %52 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %54 = llvm.shufflevector %53, %7 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %55 = llvm.extractvalue %3[3] : !llvm.array<4 x vector<8xi8>> 
    %56 = llvm.shufflevector %55, %55 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %57 = llvm.shufflevector %56, %54 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %58 = llvm.shufflevector %43, %43 [0, 1, 0, 0] : vector<2xi32> 
    %59 = llvm.shufflevector %58, %6 [0, 1, 6, 7] : vector<4xi32> 
    %60 = llvm.shufflevector %45, %45 [0, 1, 0, 0] : vector<2xi32> 
    %61 = llvm.shufflevector %60, %59 [4, 5, 0, 1] : vector<4xi32> 
    %62 = arm_neon.intr.smmla %61, %51, %57 : vector<16xi8> to vector<4xi32>
    %63 = llvm.shufflevector %62, %62 [0, 1] : vector<4xi32> 
    %64 = llvm.shufflevector %62, %62 [2, 3] : vector<4xi32> 
    %65 = llvm.shufflevector %63, %63 [0, 1, 0, 0] : vector<2xi32> 
    %66 = llvm.shufflevector %65, %36 [4, 5, 0, 1] : vector<4xi32> 
    %67 = llvm.insertvalue %66, %41[0] : !llvm.array<4 x vector<4xi32>> 
    %68 = llvm.shufflevector %64, %64 [0, 1, 0, 0] : vector<2xi32> 
    %69 = llvm.shufflevector %68, %40 [4, 5, 0, 1] : vector<4xi32> 
    %70 = llvm.insertvalue %69, %67[1] : !llvm.array<4 x vector<4xi32>> 
    %71 = llvm.extractvalue %5[2] : !llvm.array<4 x vector<4xi32>> 
    %72 = llvm.shufflevector %71, %71 [0, 1] : vector<4xi32> 
    %73 = llvm.extractvalue %5[3] : !llvm.array<4 x vector<4xi32>> 
    %74 = llvm.shufflevector %73, %73 [0, 1] : vector<4xi32> 
    %75 = llvm.extractvalue %4[2] : !llvm.array<4 x vector<8xi8>> 
    %76 = llvm.shufflevector %75, %75 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %77 = llvm.shufflevector %76, %7 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %78 = llvm.extractvalue %4[3] : !llvm.array<4 x vector<8xi8>> 
    %79 = llvm.shufflevector %78, %78 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %80 = llvm.shufflevector %79, %77 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %81 = llvm.extractvalue %3[0] : !llvm.array<4 x vector<8xi8>> 
    %82 = llvm.shufflevector %81, %81 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %83 = llvm.shufflevector %82, %7 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %84 = llvm.extractvalue %3[1] : !llvm.array<4 x vector<8xi8>> 
    %85 = llvm.shufflevector %84, %84 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %86 = llvm.shufflevector %85, %83 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %87 = llvm.shufflevector %72, %72 [0, 1, 0, 0] : vector<2xi32> 
    %88 = llvm.shufflevector %87, %6 [0, 1, 6, 7] : vector<4xi32> 
    %89 = llvm.shufflevector %74, %74 [0, 1, 0, 0] : vector<2xi32> 
    %90 = llvm.shufflevector %89, %88 [4, 5, 0, 1] : vector<4xi32> 
    %91 = arm_neon.intr.smmla %90, %80, %86 : vector<16xi8> to vector<4xi32>
    %92 = llvm.shufflevector %91, %91 [0, 1] : vector<4xi32> 
    %93 = llvm.shufflevector %91, %91 [2, 3] : vector<4xi32> 
    %94 = llvm.extractvalue %10[2] : !llvm.array<4 x vector<4xi32>> 
    %95 = llvm.shufflevector %92, %92 [0, 1, 0, 0] : vector<2xi32> 
    %96 = llvm.shufflevector %95, %94 [0, 1, 6, 7] : vector<4xi32> 
    %97 = llvm.insertvalue %96, %70[2] : !llvm.array<4 x vector<4xi32>> 
    %98 = llvm.extractvalue %10[3] : !llvm.array<4 x vector<4xi32>> 
    %99 = llvm.shufflevector %93, %93 [0, 1, 0, 0] : vector<2xi32> 
    %100 = llvm.shufflevector %99, %98 [0, 1, 6, 7] : vector<4xi32> 
    %101 = llvm.insertvalue %100, %97[3] : !llvm.array<4 x vector<4xi32>> 
    %102 = llvm.extractvalue %5[2] : !llvm.array<4 x vector<4xi32>> 
    %103 = llvm.shufflevector %102, %102 [2, 3] : vector<4xi32> 
    %104 = llvm.extractvalue %5[3] : !llvm.array<4 x vector<4xi32>> 
    %105 = llvm.shufflevector %104, %104 [2, 3] : vector<4xi32> 
    %106 = llvm.extractvalue %4[2] : !llvm.array<4 x vector<8xi8>> 
    %107 = llvm.shufflevector %106, %106 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %108 = llvm.shufflevector %107, %7 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %109 = llvm.extractvalue %4[3] : !llvm.array<4 x vector<8xi8>> 
    %110 = llvm.shufflevector %109, %109 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %111 = llvm.shufflevector %110, %108 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %112 = llvm.extractvalue %3[2] : !llvm.array<4 x vector<8xi8>> 
    %113 = llvm.shufflevector %112, %112 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %114 = llvm.shufflevector %113, %7 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %115 = llvm.extractvalue %3[3] : !llvm.array<4 x vector<8xi8>> 
    %116 = llvm.shufflevector %115, %115 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %117 = llvm.shufflevector %116, %114 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %118 = llvm.shufflevector %103, %103 [0, 1, 0, 0] : vector<2xi32> 
    %119 = llvm.shufflevector %118, %6 [0, 1, 6, 7] : vector<4xi32> 
    %120 = llvm.shufflevector %105, %105 [0, 1, 0, 0] : vector<2xi32> 
    %121 = llvm.shufflevector %120, %119 [4, 5, 0, 1] : vector<4xi32> 
    %122 = arm_neon.intr.smmla %121, %111, %117 : vector<16xi8> to vector<4xi32>
    %123 = llvm.shufflevector %122, %122 [0, 1] : vector<4xi32> 
    %124 = llvm.shufflevector %122, %122 [2, 3] : vector<4xi32> 
    %125 = llvm.shufflevector %123, %123 [0, 1, 0, 0] : vector<2xi32> 
    %126 = llvm.shufflevector %125, %96 [4, 5, 0, 1] : vector<4xi32> 
    %127 = llvm.insertvalue %126, %101[2] : !llvm.array<4 x vector<4xi32>> 
    %128 = llvm.shufflevector %124, %124 [0, 1, 0, 0] : vector<2xi32> 
    %129 = llvm.shufflevector %128, %100 [4, 5, 0, 1] : vector<4xi32> 
    %130 = llvm.insertvalue %129, %127[3] : !llvm.array<4 x vector<4xi32>> 
    llvm.return %130 : !llvm.array<4 x vector<4xi32>>
  }
  llvm.func @vector_arm_neon_mixed_unroll(%arg0: !llvm.array<4 x vector<8xi8>>, %arg1: !llvm.array<2 x vector<8xi4>>, %arg2: !llvm.array<4 x vector<2xi32>>) -> !llvm.array<4 x vector<2xi32>> {
    %0 = builtin.unrealized_conversion_cast %arg2 : !llvm.array<4 x vector<2xi32>> to vector<4x2xi32>
    %1 = builtin.unrealized_conversion_cast %arg1 : !llvm.array<2 x vector<8xi4>> to vector<2x8xi4>
    %2 = builtin.unrealized_conversion_cast %arg0 : !llvm.array<4 x vector<8xi8>> to vector<4x8xi8>
    %3 = builtin.unrealized_conversion_cast %1 : vector<2x8xi4> to !llvm.array<2 x vector<8xi4>>
    %4 = builtin.unrealized_conversion_cast %0 : vector<4x2xi32> to !llvm.array<4 x vector<2xi32>>
    %5 = builtin.unrealized_conversion_cast %2 : vector<4x8xi8> to !llvm.array<4 x vector<8xi8>>
    %6 = llvm.mlir.constant(dense<0> : vector<4xi32>) : vector<4xi32>
    %7 = llvm.mlir.constant(dense<0> : vector<16xi8>) : vector<16xi8>
    %8 = llvm.mlir.constant(dense<0> : vector<4x2xi32>) : !llvm.array<4 x vector<2xi32>>
    %9 = builtin.unrealized_conversion_cast %8 : !llvm.array<4 x vector<2xi32>> to vector<4x2xi32>
    %10 = builtin.unrealized_conversion_cast %9 : vector<4x2xi32> to !llvm.array<4 x vector<2xi32>>
    %11 = llvm.mlir.undef : !llvm.array<2 x vector<8xi8>>
    %12 = llvm.extractvalue %3[0] : !llvm.array<2 x vector<8xi4>> 
    %13 = llvm.sext %12 : vector<8xi4> to vector<8xi8>
    %14 = llvm.insertvalue %13, %11[0] : !llvm.array<2 x vector<8xi8>> 
    %15 = llvm.extractvalue %3[1] : !llvm.array<2 x vector<8xi4>> 
    %16 = llvm.sext %15 : vector<8xi4> to vector<8xi8>
    %17 = llvm.insertvalue %16, %14[1] : !llvm.array<2 x vector<8xi8>> 
    %18 = builtin.unrealized_conversion_cast %17 : !llvm.array<2 x vector<8xi8>> to vector<2x8xi8>
    %19 = builtin.unrealized_conversion_cast %18 : vector<2x8xi8> to !llvm.array<2 x vector<8xi8>>
    %20 = llvm.extractvalue %5[0] : !llvm.array<4 x vector<8xi8>> 
    %21 = llvm.shufflevector %20, %20 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %22 = llvm.shufflevector %21, %7 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %23 = llvm.extractvalue %5[1] : !llvm.array<4 x vector<8xi8>> 
    %24 = llvm.shufflevector %23, %23 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %25 = llvm.shufflevector %24, %22 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %26 = llvm.extractvalue %19[0] : !llvm.array<2 x vector<8xi8>> 
    %27 = llvm.shufflevector %26, %26 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %28 = llvm.shufflevector %27, %7 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %29 = llvm.extractvalue %19[1] : !llvm.array<2 x vector<8xi8>> 
    %30 = llvm.shufflevector %29, %29 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %31 = llvm.shufflevector %30, %28 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %32 = llvm.extractvalue %4[0] : !llvm.array<4 x vector<2xi32>> 
    %33 = llvm.shufflevector %32, %32 [0, 1, 0, 0] : vector<2xi32> 
    %34 = llvm.shufflevector %33, %6 [0, 1, 6, 7] : vector<4xi32> 
    %35 = llvm.extractvalue %4[1] : !llvm.array<4 x vector<2xi32>> 
    %36 = llvm.shufflevector %35, %35 [0, 1, 0, 0] : vector<2xi32> 
    %37 = llvm.shufflevector %36, %34 [4, 5, 0, 1] : vector<4xi32> 
    %38 = arm_neon.intr.smmla %37, %25, %31 : vector<16xi8> to vector<4xi32>
    %39 = llvm.shufflevector %38, %38 [0, 1] : vector<4xi32> 
    %40 = llvm.shufflevector %38, %38 [2, 3] : vector<4xi32> 
    %41 = llvm.insertvalue %39, %10[0] : !llvm.array<4 x vector<2xi32>> 
    %42 = llvm.insertvalue %40, %41[1] : !llvm.array<4 x vector<2xi32>> 
    %43 = llvm.extractvalue %5[2] : !llvm.array<4 x vector<8xi8>> 
    %44 = llvm.shufflevector %43, %43 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %45 = llvm.shufflevector %44, %7 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %46 = llvm.extractvalue %5[3] : !llvm.array<4 x vector<8xi8>> 
    %47 = llvm.shufflevector %46, %46 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %48 = llvm.shufflevector %47, %45 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %49 = llvm.extractvalue %19[0] : !llvm.array<2 x vector<8xi8>> 
    %50 = llvm.shufflevector %49, %49 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %51 = llvm.shufflevector %50, %7 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %52 = llvm.extractvalue %19[1] : !llvm.array<2 x vector<8xi8>> 
    %53 = llvm.shufflevector %52, %52 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %54 = llvm.shufflevector %53, %51 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %55 = llvm.extractvalue %4[2] : !llvm.array<4 x vector<2xi32>> 
    %56 = llvm.shufflevector %55, %55 [0, 1, 0, 0] : vector<2xi32> 
    %57 = llvm.shufflevector %56, %6 [0, 1, 6, 7] : vector<4xi32> 
    %58 = llvm.extractvalue %4[3] : !llvm.array<4 x vector<2xi32>> 
    %59 = llvm.shufflevector %58, %58 [0, 1, 0, 0] : vector<2xi32> 
    %60 = llvm.shufflevector %59, %57 [4, 5, 0, 1] : vector<4xi32> 
    %61 = arm_neon.intr.smmla %60, %48, %54 : vector<16xi8> to vector<4xi32>
    %62 = llvm.shufflevector %61, %61 [0, 1] : vector<4xi32> 
    %63 = llvm.shufflevector %61, %61 [2, 3] : vector<4xi32> 
    %64 = llvm.insertvalue %62, %42[2] : !llvm.array<4 x vector<2xi32>> 
    %65 = llvm.insertvalue %63, %64[3] : !llvm.array<4 x vector<2xi32>> 
    llvm.return %65 : !llvm.array<4 x vector<2xi32>>
  }
  llvm.func @vector_arm_neon_unroll_incompatible_shape(%arg0: !llvm.array<4 x vector<12xi8>>, %arg1: !llvm.array<4 x vector<12xi8>>, %arg2: !llvm.array<4 x vector<4xi32>>) -> !llvm.array<4 x vector<4xi32>> {
    %0 = builtin.unrealized_conversion_cast %arg2 : !llvm.array<4 x vector<4xi32>> to vector<4x4xi32>
    %1 = builtin.unrealized_conversion_cast %arg1 : !llvm.array<4 x vector<12xi8>> to vector<4x12xi8>
    %2 = builtin.unrealized_conversion_cast %arg0 : !llvm.array<4 x vector<12xi8>> to vector<4x12xi8>
    %3 = builtin.unrealized_conversion_cast %0 : vector<4x4xi32> to !llvm.array<4 x vector<4xi32>>
    %4 = builtin.unrealized_conversion_cast %1 : vector<4x12xi8> to !llvm.array<4 x vector<12xi8>>
    %5 = builtin.unrealized_conversion_cast %2 : vector<4x12xi8> to !llvm.array<4 x vector<12xi8>>
    %6 = llvm.mlir.constant(dense<0> : vector<4x4xi32>) : !llvm.array<4 x vector<4xi32>>
    %7 = builtin.unrealized_conversion_cast %6 : !llvm.array<4 x vector<4xi32>> to vector<4x4xi32>
    %8 = builtin.unrealized_conversion_cast %7 : vector<4x4xi32> to !llvm.array<4 x vector<4xi32>>
    %9 = llvm.mlir.undef : !llvm.array<4 x vector<12xi32>>
    %10 = llvm.extractvalue %5[0] : !llvm.array<4 x vector<12xi8>> 
    %11 = llvm.sext %10 : vector<12xi8> to vector<12xi32>
    %12 = llvm.insertvalue %11, %9[0] : !llvm.array<4 x vector<12xi32>> 
    %13 = llvm.extractvalue %5[1] : !llvm.array<4 x vector<12xi8>> 
    %14 = llvm.sext %13 : vector<12xi8> to vector<12xi32>
    %15 = llvm.insertvalue %14, %12[1] : !llvm.array<4 x vector<12xi32>> 
    %16 = llvm.extractvalue %5[2] : !llvm.array<4 x vector<12xi8>> 
    %17 = llvm.sext %16 : vector<12xi8> to vector<12xi32>
    %18 = llvm.insertvalue %17, %15[2] : !llvm.array<4 x vector<12xi32>> 
    %19 = llvm.extractvalue %5[3] : !llvm.array<4 x vector<12xi8>> 
    %20 = llvm.sext %19 : vector<12xi8> to vector<12xi32>
    %21 = llvm.insertvalue %20, %18[3] : !llvm.array<4 x vector<12xi32>> 
    %22 = builtin.unrealized_conversion_cast %21 : !llvm.array<4 x vector<12xi32>> to vector<4x12xi32>
    %23 = builtin.unrealized_conversion_cast %22 : vector<4x12xi32> to !llvm.array<4 x vector<12xi32>>
    %24 = llvm.mlir.undef : !llvm.array<4 x vector<12xi32>>
    %25 = llvm.extractvalue %4[0] : !llvm.array<4 x vector<12xi8>> 
    %26 = llvm.sext %25 : vector<12xi8> to vector<12xi32>
    %27 = llvm.insertvalue %26, %24[0] : !llvm.array<4 x vector<12xi32>> 
    %28 = llvm.extractvalue %4[1] : !llvm.array<4 x vector<12xi8>> 
    %29 = llvm.sext %28 : vector<12xi8> to vector<12xi32>
    %30 = llvm.insertvalue %29, %27[1] : !llvm.array<4 x vector<12xi32>> 
    %31 = llvm.extractvalue %4[2] : !llvm.array<4 x vector<12xi8>> 
    %32 = llvm.sext %31 : vector<12xi8> to vector<12xi32>
    %33 = llvm.insertvalue %32, %30[2] : !llvm.array<4 x vector<12xi32>> 
    %34 = llvm.extractvalue %4[3] : !llvm.array<4 x vector<12xi8>> 
    %35 = llvm.sext %34 : vector<12xi8> to vector<12xi32>
    %36 = llvm.insertvalue %35, %33[3] : !llvm.array<4 x vector<12xi32>> 
    %37 = builtin.unrealized_conversion_cast %36 : !llvm.array<4 x vector<12xi32>> to vector<4x12xi32>
    %38 = builtin.unrealized_conversion_cast %37 : vector<4x12xi32> to !llvm.array<4 x vector<12xi32>>
    %39 = llvm.extractvalue %23[0] : !llvm.array<4 x vector<12xi32>> 
    %40 = llvm.extractvalue %38[0] : !llvm.array<4 x vector<12xi32>> 
    %41 = llvm.mul %39, %40 : vector<12xi32>
    %42 = "llvm.intr.vector.reduce.add"(%41) : (vector<12xi32>) -> i32
    %43 = llvm.extractvalue %8[0] : !llvm.array<4 x vector<4xi32>> 
    %44 = llvm.mlir.constant(0 : i64) : i64
    %45 = llvm.insertelement %42, %43[%44 : i64] : vector<4xi32>
    %46 = llvm.insertvalue %45, %8[0] : !llvm.array<4 x vector<4xi32>> 
    %47 = llvm.extractvalue %38[1] : !llvm.array<4 x vector<12xi32>> 
    %48 = llvm.mul %39, %47 : vector<12xi32>
    %49 = "llvm.intr.vector.reduce.add"(%48) : (vector<12xi32>) -> i32
    %50 = llvm.extractvalue %46[0] : !llvm.array<4 x vector<4xi32>> 
    %51 = llvm.mlir.constant(1 : i64) : i64
    %52 = llvm.insertelement %49, %50[%51 : i64] : vector<4xi32>
    %53 = llvm.insertvalue %52, %46[0] : !llvm.array<4 x vector<4xi32>> 
    %54 = llvm.extractvalue %38[2] : !llvm.array<4 x vector<12xi32>> 
    %55 = llvm.mul %39, %54 : vector<12xi32>
    %56 = "llvm.intr.vector.reduce.add"(%55) : (vector<12xi32>) -> i32
    %57 = llvm.extractvalue %53[0] : !llvm.array<4 x vector<4xi32>> 
    %58 = llvm.mlir.constant(2 : i64) : i64
    %59 = llvm.insertelement %56, %57[%58 : i64] : vector<4xi32>
    %60 = llvm.insertvalue %59, %53[0] : !llvm.array<4 x vector<4xi32>> 
    %61 = llvm.extractvalue %38[3] : !llvm.array<4 x vector<12xi32>> 
    %62 = llvm.mul %39, %61 : vector<12xi32>
    %63 = "llvm.intr.vector.reduce.add"(%62) : (vector<12xi32>) -> i32
    %64 = llvm.extractvalue %60[0] : !llvm.array<4 x vector<4xi32>> 
    %65 = llvm.mlir.constant(3 : i64) : i64
    %66 = llvm.insertelement %63, %64[%65 : i64] : vector<4xi32>
    %67 = llvm.insertvalue %66, %60[0] : !llvm.array<4 x vector<4xi32>> 
    %68 = llvm.extractvalue %23[1] : !llvm.array<4 x vector<12xi32>> 
    %69 = llvm.extractvalue %38[0] : !llvm.array<4 x vector<12xi32>> 
    %70 = llvm.mul %68, %69 : vector<12xi32>
    %71 = "llvm.intr.vector.reduce.add"(%70) : (vector<12xi32>) -> i32
    %72 = llvm.extractvalue %67[1] : !llvm.array<4 x vector<4xi32>> 
    %73 = llvm.mlir.constant(0 : i64) : i64
    %74 = llvm.insertelement %71, %72[%73 : i64] : vector<4xi32>
    %75 = llvm.insertvalue %74, %67[1] : !llvm.array<4 x vector<4xi32>> 
    %76 = llvm.extractvalue %38[1] : !llvm.array<4 x vector<12xi32>> 
    %77 = llvm.mul %68, %76 : vector<12xi32>
    %78 = "llvm.intr.vector.reduce.add"(%77) : (vector<12xi32>) -> i32
    %79 = llvm.extractvalue %75[1] : !llvm.array<4 x vector<4xi32>> 
    %80 = llvm.mlir.constant(1 : i64) : i64
    %81 = llvm.insertelement %78, %79[%80 : i64] : vector<4xi32>
    %82 = llvm.insertvalue %81, %75[1] : !llvm.array<4 x vector<4xi32>> 
    %83 = llvm.extractvalue %38[2] : !llvm.array<4 x vector<12xi32>> 
    %84 = llvm.mul %68, %83 : vector<12xi32>
    %85 = "llvm.intr.vector.reduce.add"(%84) : (vector<12xi32>) -> i32
    %86 = llvm.extractvalue %82[1] : !llvm.array<4 x vector<4xi32>> 
    %87 = llvm.mlir.constant(2 : i64) : i64
    %88 = llvm.insertelement %85, %86[%87 : i64] : vector<4xi32>
    %89 = llvm.insertvalue %88, %82[1] : !llvm.array<4 x vector<4xi32>> 
    %90 = llvm.extractvalue %38[3] : !llvm.array<4 x vector<12xi32>> 
    %91 = llvm.mul %68, %90 : vector<12xi32>
    %92 = "llvm.intr.vector.reduce.add"(%91) : (vector<12xi32>) -> i32
    %93 = llvm.extractvalue %89[1] : !llvm.array<4 x vector<4xi32>> 
    %94 = llvm.mlir.constant(3 : i64) : i64
    %95 = llvm.insertelement %92, %93[%94 : i64] : vector<4xi32>
    %96 = llvm.insertvalue %95, %89[1] : !llvm.array<4 x vector<4xi32>> 
    %97 = llvm.extractvalue %23[2] : !llvm.array<4 x vector<12xi32>> 
    %98 = llvm.extractvalue %38[0] : !llvm.array<4 x vector<12xi32>> 
    %99 = llvm.mul %97, %98 : vector<12xi32>
    %100 = "llvm.intr.vector.reduce.add"(%99) : (vector<12xi32>) -> i32
    %101 = llvm.extractvalue %96[2] : !llvm.array<4 x vector<4xi32>> 
    %102 = llvm.mlir.constant(0 : i64) : i64
    %103 = llvm.insertelement %100, %101[%102 : i64] : vector<4xi32>
    %104 = llvm.insertvalue %103, %96[2] : !llvm.array<4 x vector<4xi32>> 
    %105 = llvm.extractvalue %38[1] : !llvm.array<4 x vector<12xi32>> 
    %106 = llvm.mul %97, %105 : vector<12xi32>
    %107 = "llvm.intr.vector.reduce.add"(%106) : (vector<12xi32>) -> i32
    %108 = llvm.extractvalue %104[2] : !llvm.array<4 x vector<4xi32>> 
    %109 = llvm.mlir.constant(1 : i64) : i64
    %110 = llvm.insertelement %107, %108[%109 : i64] : vector<4xi32>
    %111 = llvm.insertvalue %110, %104[2] : !llvm.array<4 x vector<4xi32>> 
    %112 = llvm.extractvalue %38[2] : !llvm.array<4 x vector<12xi32>> 
    %113 = llvm.mul %97, %112 : vector<12xi32>
    %114 = "llvm.intr.vector.reduce.add"(%113) : (vector<12xi32>) -> i32
    %115 = llvm.extractvalue %111[2] : !llvm.array<4 x vector<4xi32>> 
    %116 = llvm.mlir.constant(2 : i64) : i64
    %117 = llvm.insertelement %114, %115[%116 : i64] : vector<4xi32>
    %118 = llvm.insertvalue %117, %111[2] : !llvm.array<4 x vector<4xi32>> 
    %119 = llvm.extractvalue %38[3] : !llvm.array<4 x vector<12xi32>> 
    %120 = llvm.mul %97, %119 : vector<12xi32>
    %121 = "llvm.intr.vector.reduce.add"(%120) : (vector<12xi32>) -> i32
    %122 = llvm.extractvalue %118[2] : !llvm.array<4 x vector<4xi32>> 
    %123 = llvm.mlir.constant(3 : i64) : i64
    %124 = llvm.insertelement %121, %122[%123 : i64] : vector<4xi32>
    %125 = llvm.insertvalue %124, %118[2] : !llvm.array<4 x vector<4xi32>> 
    %126 = llvm.extractvalue %23[3] : !llvm.array<4 x vector<12xi32>> 
    %127 = llvm.extractvalue %38[0] : !llvm.array<4 x vector<12xi32>> 
    %128 = llvm.mul %126, %127 : vector<12xi32>
    %129 = "llvm.intr.vector.reduce.add"(%128) : (vector<12xi32>) -> i32
    %130 = llvm.extractvalue %125[3] : !llvm.array<4 x vector<4xi32>> 
    %131 = llvm.mlir.constant(0 : i64) : i64
    %132 = llvm.insertelement %129, %130[%131 : i64] : vector<4xi32>
    %133 = llvm.insertvalue %132, %125[3] : !llvm.array<4 x vector<4xi32>> 
    %134 = llvm.extractvalue %38[1] : !llvm.array<4 x vector<12xi32>> 
    %135 = llvm.mul %126, %134 : vector<12xi32>
    %136 = "llvm.intr.vector.reduce.add"(%135) : (vector<12xi32>) -> i32
    %137 = llvm.extractvalue %133[3] : !llvm.array<4 x vector<4xi32>> 
    %138 = llvm.mlir.constant(1 : i64) : i64
    %139 = llvm.insertelement %136, %137[%138 : i64] : vector<4xi32>
    %140 = llvm.insertvalue %139, %133[3] : !llvm.array<4 x vector<4xi32>> 
    %141 = llvm.extractvalue %38[2] : !llvm.array<4 x vector<12xi32>> 
    %142 = llvm.mul %126, %141 : vector<12xi32>
    %143 = "llvm.intr.vector.reduce.add"(%142) : (vector<12xi32>) -> i32
    %144 = llvm.extractvalue %140[3] : !llvm.array<4 x vector<4xi32>> 
    %145 = llvm.mlir.constant(2 : i64) : i64
    %146 = llvm.insertelement %143, %144[%145 : i64] : vector<4xi32>
    %147 = llvm.insertvalue %146, %140[3] : !llvm.array<4 x vector<4xi32>> 
    %148 = llvm.extractvalue %38[3] : !llvm.array<4 x vector<12xi32>> 
    %149 = llvm.mul %126, %148 : vector<12xi32>
    %150 = "llvm.intr.vector.reduce.add"(%149) : (vector<12xi32>) -> i32
    %151 = llvm.extractvalue %147[3] : !llvm.array<4 x vector<4xi32>> 
    %152 = llvm.mlir.constant(3 : i64) : i64
    %153 = llvm.insertelement %150, %151[%152 : i64] : vector<4xi32>
    %154 = llvm.insertvalue %153, %147[3] : !llvm.array<4 x vector<4xi32>> 
    %155 = llvm.mlir.undef : !llvm.array<4 x vector<4xi32>>
    %156 = llvm.extractvalue %154[0] : !llvm.array<4 x vector<4xi32>> 
    %157 = llvm.extractvalue %3[0] : !llvm.array<4 x vector<4xi32>> 
    %158 = llvm.add %156, %157 : vector<4xi32>
    %159 = llvm.insertvalue %158, %155[0] : !llvm.array<4 x vector<4xi32>> 
    %160 = llvm.extractvalue %154[1] : !llvm.array<4 x vector<4xi32>> 
    %161 = llvm.extractvalue %3[1] : !llvm.array<4 x vector<4xi32>> 
    %162 = llvm.add %160, %161 : vector<4xi32>
    %163 = llvm.insertvalue %162, %159[1] : !llvm.array<4 x vector<4xi32>> 
    %164 = llvm.extractvalue %154[2] : !llvm.array<4 x vector<4xi32>> 
    %165 = llvm.extractvalue %3[2] : !llvm.array<4 x vector<4xi32>> 
    %166 = llvm.add %164, %165 : vector<4xi32>
    %167 = llvm.insertvalue %166, %163[2] : !llvm.array<4 x vector<4xi32>> 
    %168 = llvm.extractvalue %154[3] : !llvm.array<4 x vector<4xi32>> 
    %169 = llvm.extractvalue %3[3] : !llvm.array<4 x vector<4xi32>> 
    %170 = llvm.add %168, %169 : vector<4xi32>
    %171 = llvm.insertvalue %170, %167[3] : !llvm.array<4 x vector<4xi32>> 
    llvm.return %171 : !llvm.array<4 x vector<4xi32>>
  }
  llvm.func @vector_arm_neon_vecmat_unroll(%arg0: vector<8xi8>, %arg1: !llvm.array<8 x vector<8xi8>>, %arg2: vector<8xi32>) -> vector<8xi32> {
    %0 = builtin.unrealized_conversion_cast %arg1 : !llvm.array<8 x vector<8xi8>> to vector<8x8xi8>
    %1 = builtin.unrealized_conversion_cast %0 : vector<8x8xi8> to !llvm.array<8 x vector<8xi8>>
    %2 = llvm.mlir.constant(dense<0> : vector<4xi32>) : vector<4xi32>
    %3 = llvm.mlir.constant(dense<0> : vector<16xi8>) : vector<16xi8>
    %4 = llvm.mlir.constant(dense<0> : vector<2x2xi32>) : !llvm.array<2 x vector<2xi32>>
    %5 = builtin.unrealized_conversion_cast %4 : !llvm.array<2 x vector<2xi32>> to vector<2x2xi32>
    %6 = builtin.unrealized_conversion_cast %5 : vector<2x2xi32> to !llvm.array<2 x vector<2xi32>>
    %7 = llvm.mlir.constant(dense<0> : vector<2x8xi8>) : !llvm.array<2 x vector<8xi8>>
    %8 = builtin.unrealized_conversion_cast %7 : !llvm.array<2 x vector<8xi8>> to vector<2x8xi8>
    %9 = builtin.unrealized_conversion_cast %8 : vector<2x8xi8> to !llvm.array<2 x vector<8xi8>>
    %10 = llvm.mlir.constant(dense<0> : vector<8xi32>) : vector<8xi32>
    %11 = llvm.shufflevector %arg2, %arg2 [0, 1] : vector<8xi32> 
    %12 = llvm.shufflevector %arg0, %arg0 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %13 = llvm.shufflevector %12, %3 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %14 = llvm.extractvalue %9[1] : !llvm.array<2 x vector<8xi8>> 
    %15 = llvm.shufflevector %14, %14 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %16 = llvm.shufflevector %15, %13 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %17 = llvm.extractvalue %1[0] : !llvm.array<8 x vector<8xi8>> 
    %18 = llvm.shufflevector %17, %17 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %19 = llvm.shufflevector %18, %3 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %20 = llvm.extractvalue %1[1] : !llvm.array<8 x vector<8xi8>> 
    %21 = llvm.shufflevector %20, %20 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %22 = llvm.shufflevector %21, %19 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %23 = llvm.shufflevector %11, %11 [0, 1, 0, 0] : vector<2xi32> 
    %24 = llvm.shufflevector %23, %2 [0, 1, 6, 7] : vector<4xi32> 
    %25 = llvm.extractvalue %6[1] : !llvm.array<2 x vector<2xi32>> 
    %26 = llvm.shufflevector %25, %25 [0, 1, 0, 0] : vector<2xi32> 
    %27 = llvm.shufflevector %26, %24 [4, 5, 0, 1] : vector<4xi32> 
    %28 = arm_neon.intr.smmla %27, %16, %22 : vector<16xi8> to vector<4xi32>
    %29 = llvm.shufflevector %28, %28 [0, 1] : vector<4xi32> 
    %30 = llvm.shufflevector %29, %29 [0, 1, 0, 0, 0, 0, 0, 0] : vector<2xi32> 
    %31 = llvm.shufflevector %30, %10 [0, 1, 10, 11, 12, 13, 14, 15] : vector<8xi32> 
    %32 = llvm.shufflevector %arg2, %arg2 [2, 3] : vector<8xi32> 
    %33 = llvm.shufflevector %arg0, %arg0 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %34 = llvm.shufflevector %33, %3 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %35 = llvm.extractvalue %9[1] : !llvm.array<2 x vector<8xi8>> 
    %36 = llvm.shufflevector %35, %35 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %37 = llvm.shufflevector %36, %34 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %38 = llvm.extractvalue %1[2] : !llvm.array<8 x vector<8xi8>> 
    %39 = llvm.shufflevector %38, %38 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %40 = llvm.shufflevector %39, %3 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %41 = llvm.extractvalue %1[3] : !llvm.array<8 x vector<8xi8>> 
    %42 = llvm.shufflevector %41, %41 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %43 = llvm.shufflevector %42, %40 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %44 = llvm.shufflevector %32, %32 [0, 1, 0, 0] : vector<2xi32> 
    %45 = llvm.shufflevector %44, %2 [0, 1, 6, 7] : vector<4xi32> 
    %46 = llvm.extractvalue %6[1] : !llvm.array<2 x vector<2xi32>> 
    %47 = llvm.shufflevector %46, %46 [0, 1, 0, 0] : vector<2xi32> 
    %48 = llvm.shufflevector %47, %45 [4, 5, 0, 1] : vector<4xi32> 
    %49 = arm_neon.intr.smmla %48, %37, %43 : vector<16xi8> to vector<4xi32>
    %50 = llvm.shufflevector %49, %49 [0, 1] : vector<4xi32> 
    %51 = llvm.shufflevector %50, %50 [0, 1, 0, 0, 0, 0, 0, 0] : vector<2xi32> 
    %52 = llvm.shufflevector %51, %31 [8, 9, 0, 1, 12, 13, 14, 15] : vector<8xi32> 
    %53 = llvm.shufflevector %arg2, %arg2 [4, 5] : vector<8xi32> 
    %54 = llvm.shufflevector %arg0, %arg0 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %55 = llvm.shufflevector %54, %3 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %56 = llvm.extractvalue %9[1] : !llvm.array<2 x vector<8xi8>> 
    %57 = llvm.shufflevector %56, %56 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %58 = llvm.shufflevector %57, %55 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %59 = llvm.extractvalue %1[4] : !llvm.array<8 x vector<8xi8>> 
    %60 = llvm.shufflevector %59, %59 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %61 = llvm.shufflevector %60, %3 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %62 = llvm.extractvalue %1[5] : !llvm.array<8 x vector<8xi8>> 
    %63 = llvm.shufflevector %62, %62 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %64 = llvm.shufflevector %63, %61 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %65 = llvm.shufflevector %53, %53 [0, 1, 0, 0] : vector<2xi32> 
    %66 = llvm.shufflevector %65, %2 [0, 1, 6, 7] : vector<4xi32> 
    %67 = llvm.extractvalue %6[1] : !llvm.array<2 x vector<2xi32>> 
    %68 = llvm.shufflevector %67, %67 [0, 1, 0, 0] : vector<2xi32> 
    %69 = llvm.shufflevector %68, %66 [4, 5, 0, 1] : vector<4xi32> 
    %70 = arm_neon.intr.smmla %69, %58, %64 : vector<16xi8> to vector<4xi32>
    %71 = llvm.shufflevector %70, %70 [0, 1] : vector<4xi32> 
    %72 = llvm.shufflevector %71, %71 [0, 1, 0, 0, 0, 0, 0, 0] : vector<2xi32> 
    %73 = llvm.shufflevector %72, %52 [8, 9, 10, 11, 0, 1, 14, 15] : vector<8xi32> 
    %74 = llvm.shufflevector %arg2, %arg2 [6, 7] : vector<8xi32> 
    %75 = llvm.shufflevector %arg0, %arg0 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %76 = llvm.shufflevector %75, %3 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %77 = llvm.extractvalue %9[1] : !llvm.array<2 x vector<8xi8>> 
    %78 = llvm.shufflevector %77, %77 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %79 = llvm.shufflevector %78, %76 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %80 = llvm.extractvalue %1[6] : !llvm.array<8 x vector<8xi8>> 
    %81 = llvm.shufflevector %80, %80 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %82 = llvm.shufflevector %81, %3 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %83 = llvm.extractvalue %1[7] : !llvm.array<8 x vector<8xi8>> 
    %84 = llvm.shufflevector %83, %83 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %85 = llvm.shufflevector %84, %82 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %86 = llvm.shufflevector %74, %74 [0, 1, 0, 0] : vector<2xi32> 
    %87 = llvm.shufflevector %86, %2 [0, 1, 6, 7] : vector<4xi32> 
    %88 = llvm.extractvalue %6[1] : !llvm.array<2 x vector<2xi32>> 
    %89 = llvm.shufflevector %88, %88 [0, 1, 0, 0] : vector<2xi32> 
    %90 = llvm.shufflevector %89, %87 [4, 5, 0, 1] : vector<4xi32> 
    %91 = arm_neon.intr.smmla %90, %79, %85 : vector<16xi8> to vector<4xi32>
    %92 = llvm.shufflevector %91, %91 [0, 1] : vector<4xi32> 
    %93 = llvm.shufflevector %92, %92 [0, 1, 0, 0, 0, 0, 0, 0] : vector<2xi32> 
    %94 = llvm.shufflevector %93, %73 [8, 9, 10, 11, 12, 13, 0, 1] : vector<8xi32> 
    llvm.return %94 : vector<8xi32>
  }
  llvm.func @vector_arm_neon_vecmat_unroll_leading_dim(%arg0: !llvm.array<1 x vector<8xi8>>, %arg1: !llvm.array<8 x vector<8xi8>>, %arg2: !llvm.array<1 x vector<8xi32>>) -> !llvm.array<1 x vector<8xi32>> {
    %0 = builtin.unrealized_conversion_cast %arg2 : !llvm.array<1 x vector<8xi32>> to vector<1x8xi32>
    %1 = builtin.unrealized_conversion_cast %arg1 : !llvm.array<8 x vector<8xi8>> to vector<8x8xi8>
    %2 = builtin.unrealized_conversion_cast %arg0 : !llvm.array<1 x vector<8xi8>> to vector<1x8xi8>
    %3 = builtin.unrealized_conversion_cast %1 : vector<8x8xi8> to !llvm.array<8 x vector<8xi8>>
    %4 = builtin.unrealized_conversion_cast %2 : vector<1x8xi8> to !llvm.array<1 x vector<8xi8>>
    %5 = builtin.unrealized_conversion_cast %0 : vector<1x8xi32> to !llvm.array<1 x vector<8xi32>>
    %6 = llvm.mlir.constant(dense<0> : vector<4xi32>) : vector<4xi32>
    %7 = llvm.mlir.constant(dense<0> : vector<16xi8>) : vector<16xi8>
    %8 = llvm.mlir.constant(dense<0> : vector<2x2xi32>) : !llvm.array<2 x vector<2xi32>>
    %9 = builtin.unrealized_conversion_cast %8 : !llvm.array<2 x vector<2xi32>> to vector<2x2xi32>
    %10 = builtin.unrealized_conversion_cast %9 : vector<2x2xi32> to !llvm.array<2 x vector<2xi32>>
    %11 = llvm.mlir.constant(dense<0> : vector<2x8xi8>) : !llvm.array<2 x vector<8xi8>>
    %12 = builtin.unrealized_conversion_cast %11 : !llvm.array<2 x vector<8xi8>> to vector<2x8xi8>
    %13 = builtin.unrealized_conversion_cast %12 : vector<2x8xi8> to !llvm.array<2 x vector<8xi8>>
    %14 = llvm.mlir.constant(dense<0> : vector<1x8xi32>) : !llvm.array<1 x vector<8xi32>>
    %15 = builtin.unrealized_conversion_cast %14 : !llvm.array<1 x vector<8xi32>> to vector<1x8xi32>
    %16 = builtin.unrealized_conversion_cast %15 : vector<1x8xi32> to !llvm.array<1 x vector<8xi32>>
    %17 = llvm.extractvalue %5[0] : !llvm.array<1 x vector<8xi32>> 
    %18 = llvm.shufflevector %17, %17 [0, 1] : vector<8xi32> 
    %19 = llvm.extractvalue %4[0] : !llvm.array<1 x vector<8xi8>> 
    %20 = llvm.shufflevector %19, %19 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %21 = llvm.shufflevector %20, %7 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %22 = llvm.extractvalue %13[1] : !llvm.array<2 x vector<8xi8>> 
    %23 = llvm.shufflevector %22, %22 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %24 = llvm.shufflevector %23, %21 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %25 = llvm.extractvalue %3[0] : !llvm.array<8 x vector<8xi8>> 
    %26 = llvm.shufflevector %25, %25 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %27 = llvm.shufflevector %26, %7 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %28 = llvm.extractvalue %3[1] : !llvm.array<8 x vector<8xi8>> 
    %29 = llvm.shufflevector %28, %28 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %30 = llvm.shufflevector %29, %27 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %31 = llvm.shufflevector %18, %18 [0, 1, 0, 0] : vector<2xi32> 
    %32 = llvm.shufflevector %31, %6 [0, 1, 6, 7] : vector<4xi32> 
    %33 = llvm.extractvalue %10[1] : !llvm.array<2 x vector<2xi32>> 
    %34 = llvm.shufflevector %33, %33 [0, 1, 0, 0] : vector<2xi32> 
    %35 = llvm.shufflevector %34, %32 [4, 5, 0, 1] : vector<4xi32> 
    %36 = arm_neon.intr.smmla %35, %24, %30 : vector<16xi8> to vector<4xi32>
    %37 = llvm.shufflevector %36, %36 [0, 1] : vector<4xi32> 
    %38 = llvm.extractvalue %16[0] : !llvm.array<1 x vector<8xi32>> 
    %39 = llvm.shufflevector %37, %37 [0, 1, 0, 0, 0, 0, 0, 0] : vector<2xi32> 
    %40 = llvm.shufflevector %39, %38 [0, 1, 10, 11, 12, 13, 14, 15] : vector<8xi32> 
    %41 = llvm.insertvalue %40, %16[0] : !llvm.array<1 x vector<8xi32>> 
    %42 = llvm.extractvalue %5[0] : !llvm.array<1 x vector<8xi32>> 
    %43 = llvm.shufflevector %42, %42 [2, 3] : vector<8xi32> 
    %44 = llvm.extractvalue %4[0] : !llvm.array<1 x vector<8xi8>> 
    %45 = llvm.shufflevector %44, %44 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %46 = llvm.shufflevector %45, %7 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %47 = llvm.extractvalue %13[1] : !llvm.array<2 x vector<8xi8>> 
    %48 = llvm.shufflevector %47, %47 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %49 = llvm.shufflevector %48, %46 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %50 = llvm.extractvalue %3[2] : !llvm.array<8 x vector<8xi8>> 
    %51 = llvm.shufflevector %50, %50 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %52 = llvm.shufflevector %51, %7 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %53 = llvm.extractvalue %3[3] : !llvm.array<8 x vector<8xi8>> 
    %54 = llvm.shufflevector %53, %53 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %55 = llvm.shufflevector %54, %52 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %56 = llvm.shufflevector %43, %43 [0, 1, 0, 0] : vector<2xi32> 
    %57 = llvm.shufflevector %56, %6 [0, 1, 6, 7] : vector<4xi32> 
    %58 = llvm.extractvalue %10[1] : !llvm.array<2 x vector<2xi32>> 
    %59 = llvm.shufflevector %58, %58 [0, 1, 0, 0] : vector<2xi32> 
    %60 = llvm.shufflevector %59, %57 [4, 5, 0, 1] : vector<4xi32> 
    %61 = arm_neon.intr.smmla %60, %49, %55 : vector<16xi8> to vector<4xi32>
    %62 = llvm.shufflevector %61, %61 [0, 1] : vector<4xi32> 
    %63 = llvm.shufflevector %62, %62 [0, 1, 0, 0, 0, 0, 0, 0] : vector<2xi32> 
    %64 = llvm.shufflevector %63, %40 [8, 9, 0, 1, 12, 13, 14, 15] : vector<8xi32> 
    %65 = llvm.insertvalue %64, %41[0] : !llvm.array<1 x vector<8xi32>> 
    %66 = llvm.extractvalue %5[0] : !llvm.array<1 x vector<8xi32>> 
    %67 = llvm.shufflevector %66, %66 [4, 5] : vector<8xi32> 
    %68 = llvm.extractvalue %4[0] : !llvm.array<1 x vector<8xi8>> 
    %69 = llvm.shufflevector %68, %68 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %70 = llvm.shufflevector %69, %7 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %71 = llvm.extractvalue %13[1] : !llvm.array<2 x vector<8xi8>> 
    %72 = llvm.shufflevector %71, %71 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %73 = llvm.shufflevector %72, %70 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %74 = llvm.extractvalue %3[4] : !llvm.array<8 x vector<8xi8>> 
    %75 = llvm.shufflevector %74, %74 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %76 = llvm.shufflevector %75, %7 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %77 = llvm.extractvalue %3[5] : !llvm.array<8 x vector<8xi8>> 
    %78 = llvm.shufflevector %77, %77 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %79 = llvm.shufflevector %78, %76 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %80 = llvm.shufflevector %67, %67 [0, 1, 0, 0] : vector<2xi32> 
    %81 = llvm.shufflevector %80, %6 [0, 1, 6, 7] : vector<4xi32> 
    %82 = llvm.extractvalue %10[1] : !llvm.array<2 x vector<2xi32>> 
    %83 = llvm.shufflevector %82, %82 [0, 1, 0, 0] : vector<2xi32> 
    %84 = llvm.shufflevector %83, %81 [4, 5, 0, 1] : vector<4xi32> 
    %85 = arm_neon.intr.smmla %84, %73, %79 : vector<16xi8> to vector<4xi32>
    %86 = llvm.shufflevector %85, %85 [0, 1] : vector<4xi32> 
    %87 = llvm.shufflevector %86, %86 [0, 1, 0, 0, 0, 0, 0, 0] : vector<2xi32> 
    %88 = llvm.shufflevector %87, %64 [8, 9, 10, 11, 0, 1, 14, 15] : vector<8xi32> 
    %89 = llvm.insertvalue %88, %65[0] : !llvm.array<1 x vector<8xi32>> 
    %90 = llvm.extractvalue %5[0] : !llvm.array<1 x vector<8xi32>> 
    %91 = llvm.shufflevector %90, %90 [6, 7] : vector<8xi32> 
    %92 = llvm.extractvalue %4[0] : !llvm.array<1 x vector<8xi8>> 
    %93 = llvm.shufflevector %92, %92 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %94 = llvm.shufflevector %93, %7 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %95 = llvm.extractvalue %13[1] : !llvm.array<2 x vector<8xi8>> 
    %96 = llvm.shufflevector %95, %95 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %97 = llvm.shufflevector %96, %94 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %98 = llvm.extractvalue %3[6] : !llvm.array<8 x vector<8xi8>> 
    %99 = llvm.shufflevector %98, %98 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %100 = llvm.shufflevector %99, %7 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %101 = llvm.extractvalue %3[7] : !llvm.array<8 x vector<8xi8>> 
    %102 = llvm.shufflevector %101, %101 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %103 = llvm.shufflevector %102, %100 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %104 = llvm.shufflevector %91, %91 [0, 1, 0, 0] : vector<2xi32> 
    %105 = llvm.shufflevector %104, %6 [0, 1, 6, 7] : vector<4xi32> 
    %106 = llvm.extractvalue %10[1] : !llvm.array<2 x vector<2xi32>> 
    %107 = llvm.shufflevector %106, %106 [0, 1, 0, 0] : vector<2xi32> 
    %108 = llvm.shufflevector %107, %105 [4, 5, 0, 1] : vector<4xi32> 
    %109 = arm_neon.intr.smmla %108, %97, %103 : vector<16xi8> to vector<4xi32>
    %110 = llvm.shufflevector %109, %109 [0, 1] : vector<4xi32> 
    %111 = llvm.shufflevector %110, %110 [0, 1, 0, 0, 0, 0, 0, 0] : vector<2xi32> 
    %112 = llvm.shufflevector %111, %88 [8, 9, 10, 11, 12, 13, 0, 1] : vector<8xi32> 
    %113 = llvm.insertvalue %112, %89[0] : !llvm.array<1 x vector<8xi32>> 
    llvm.return %113 : !llvm.array<1 x vector<8xi32>>
  }
  llvm.func @vector_arm_neon_matvec(%arg0: !llvm.array<8 x vector<8xi8>>, %arg1: vector<8xi8>, %arg2: vector<8xi32>) -> vector<8xi32> {
    %0 = builtin.unrealized_conversion_cast %arg0 : !llvm.array<8 x vector<8xi8>> to vector<8x8xi8>
    %1 = builtin.unrealized_conversion_cast %0 : vector<8x8xi8> to !llvm.array<8 x vector<8xi8>>
    %2 = llvm.mlir.constant(dense<0> : vector<8xi32>) : vector<8xi32>
    %3 = llvm.sext %arg1 : vector<8xi8> to vector<8xi32>
    %4 = llvm.mlir.undef : !llvm.array<8 x vector<8xi32>>
    %5 = llvm.extractvalue %1[0] : !llvm.array<8 x vector<8xi8>> 
    %6 = llvm.sext %5 : vector<8xi8> to vector<8xi32>
    %7 = llvm.insertvalue %6, %4[0] : !llvm.array<8 x vector<8xi32>> 
    %8 = llvm.extractvalue %1[1] : !llvm.array<8 x vector<8xi8>> 
    %9 = llvm.sext %8 : vector<8xi8> to vector<8xi32>
    %10 = llvm.insertvalue %9, %7[1] : !llvm.array<8 x vector<8xi32>> 
    %11 = llvm.extractvalue %1[2] : !llvm.array<8 x vector<8xi8>> 
    %12 = llvm.sext %11 : vector<8xi8> to vector<8xi32>
    %13 = llvm.insertvalue %12, %10[2] : !llvm.array<8 x vector<8xi32>> 
    %14 = llvm.extractvalue %1[3] : !llvm.array<8 x vector<8xi8>> 
    %15 = llvm.sext %14 : vector<8xi8> to vector<8xi32>
    %16 = llvm.insertvalue %15, %13[3] : !llvm.array<8 x vector<8xi32>> 
    %17 = llvm.extractvalue %1[4] : !llvm.array<8 x vector<8xi8>> 
    %18 = llvm.sext %17 : vector<8xi8> to vector<8xi32>
    %19 = llvm.insertvalue %18, %16[4] : !llvm.array<8 x vector<8xi32>> 
    %20 = llvm.extractvalue %1[5] : !llvm.array<8 x vector<8xi8>> 
    %21 = llvm.sext %20 : vector<8xi8> to vector<8xi32>
    %22 = llvm.insertvalue %21, %19[5] : !llvm.array<8 x vector<8xi32>> 
    %23 = llvm.extractvalue %1[6] : !llvm.array<8 x vector<8xi8>> 
    %24 = llvm.sext %23 : vector<8xi8> to vector<8xi32>
    %25 = llvm.insertvalue %24, %22[6] : !llvm.array<8 x vector<8xi32>> 
    %26 = llvm.extractvalue %1[7] : !llvm.array<8 x vector<8xi8>> 
    %27 = llvm.sext %26 : vector<8xi8> to vector<8xi32>
    %28 = llvm.insertvalue %27, %25[7] : !llvm.array<8 x vector<8xi32>> 
    %29 = builtin.unrealized_conversion_cast %28 : !llvm.array<8 x vector<8xi32>> to vector<8x8xi32>
    %30 = builtin.unrealized_conversion_cast %29 : vector<8x8xi32> to !llvm.array<8 x vector<8xi32>>
    %31 = llvm.extractvalue %30[0] : !llvm.array<8 x vector<8xi32>> 
    %32 = llvm.mul %31, %3 : vector<8xi32>
    %33 = "llvm.intr.vector.reduce.add"(%32) : (vector<8xi32>) -> i32
    %34 = llvm.mlir.constant(0 : i64) : i64
    %35 = llvm.insertelement %33, %2[%34 : i64] : vector<8xi32>
    %36 = llvm.extractvalue %30[1] : !llvm.array<8 x vector<8xi32>> 
    %37 = llvm.mul %36, %3 : vector<8xi32>
    %38 = "llvm.intr.vector.reduce.add"(%37) : (vector<8xi32>) -> i32
    %39 = llvm.mlir.constant(1 : i64) : i64
    %40 = llvm.insertelement %38, %35[%39 : i64] : vector<8xi32>
    %41 = llvm.extractvalue %30[2] : !llvm.array<8 x vector<8xi32>> 
    %42 = llvm.mul %41, %3 : vector<8xi32>
    %43 = "llvm.intr.vector.reduce.add"(%42) : (vector<8xi32>) -> i32
    %44 = llvm.mlir.constant(2 : i64) : i64
    %45 = llvm.insertelement %43, %40[%44 : i64] : vector<8xi32>
    %46 = llvm.extractvalue %30[3] : !llvm.array<8 x vector<8xi32>> 
    %47 = llvm.mul %46, %3 : vector<8xi32>
    %48 = "llvm.intr.vector.reduce.add"(%47) : (vector<8xi32>) -> i32
    %49 = llvm.mlir.constant(3 : i64) : i64
    %50 = llvm.insertelement %48, %45[%49 : i64] : vector<8xi32>
    %51 = llvm.extractvalue %30[4] : !llvm.array<8 x vector<8xi32>> 
    %52 = llvm.mul %51, %3 : vector<8xi32>
    %53 = "llvm.intr.vector.reduce.add"(%52) : (vector<8xi32>) -> i32
    %54 = llvm.mlir.constant(4 : i64) : i64
    %55 = llvm.insertelement %53, %50[%54 : i64] : vector<8xi32>
    %56 = llvm.extractvalue %30[5] : !llvm.array<8 x vector<8xi32>> 
    %57 = llvm.mul %56, %3 : vector<8xi32>
    %58 = "llvm.intr.vector.reduce.add"(%57) : (vector<8xi32>) -> i32
    %59 = llvm.mlir.constant(5 : i64) : i64
    %60 = llvm.insertelement %58, %55[%59 : i64] : vector<8xi32>
    %61 = llvm.extractvalue %30[6] : !llvm.array<8 x vector<8xi32>> 
    %62 = llvm.mul %61, %3 : vector<8xi32>
    %63 = "llvm.intr.vector.reduce.add"(%62) : (vector<8xi32>) -> i32
    %64 = llvm.mlir.constant(6 : i64) : i64
    %65 = llvm.insertelement %63, %60[%64 : i64] : vector<8xi32>
    %66 = llvm.extractvalue %30[7] : !llvm.array<8 x vector<8xi32>> 
    %67 = llvm.mul %66, %3 : vector<8xi32>
    %68 = "llvm.intr.vector.reduce.add"(%67) : (vector<8xi32>) -> i32
    %69 = llvm.mlir.constant(7 : i64) : i64
    %70 = llvm.insertelement %68, %65[%69 : i64] : vector<8xi32>
    %71 = llvm.add %70, %arg2 : vector<8xi32>
    llvm.return %71 : vector<8xi32>
  }
  llvm.func @vector_arm_neon_k_unroll(%arg0: !llvm.array<2 x vector<16xi8>>, %arg1: !llvm.array<2 x vector<16xi4>>, %arg2: !llvm.array<2 x vector<2xi32>>) -> !llvm.array<2 x vector<2xi32>> {
    %0 = builtin.unrealized_conversion_cast %arg2 : !llvm.array<2 x vector<2xi32>> to vector<2x2xi32>
    %1 = builtin.unrealized_conversion_cast %arg1 : !llvm.array<2 x vector<16xi4>> to vector<2x16xi4>
    %2 = builtin.unrealized_conversion_cast %arg0 : !llvm.array<2 x vector<16xi8>> to vector<2x16xi8>
    %3 = builtin.unrealized_conversion_cast %1 : vector<2x16xi4> to !llvm.array<2 x vector<16xi4>>
    %4 = builtin.unrealized_conversion_cast %0 : vector<2x2xi32> to !llvm.array<2 x vector<2xi32>>
    %5 = builtin.unrealized_conversion_cast %2 : vector<2x16xi8> to !llvm.array<2 x vector<16xi8>>
    %6 = llvm.mlir.constant(dense<0> : vector<2x2xi32>) : !llvm.array<2 x vector<2xi32>>
    %7 = builtin.unrealized_conversion_cast %6 : !llvm.array<2 x vector<2xi32>> to vector<2x2xi32>
    %8 = builtin.unrealized_conversion_cast %7 : vector<2x2xi32> to !llvm.array<2 x vector<2xi32>>
    %9 = llvm.mlir.constant(dense<0> : vector<4xi32>) : vector<4xi32>
    %10 = llvm.mlir.constant(dense<0> : vector<16xi8>) : vector<16xi8>
    %11 = llvm.mlir.undef : !llvm.array<2 x vector<16xi8>>
    %12 = llvm.extractvalue %3[0] : !llvm.array<2 x vector<16xi4>> 
    %13 = llvm.sext %12 : vector<16xi4> to vector<16xi8>
    %14 = llvm.insertvalue %13, %11[0] : !llvm.array<2 x vector<16xi8>> 
    %15 = llvm.extractvalue %3[1] : !llvm.array<2 x vector<16xi4>> 
    %16 = llvm.sext %15 : vector<16xi4> to vector<16xi8>
    %17 = llvm.insertvalue %16, %14[1] : !llvm.array<2 x vector<16xi8>> 
    %18 = builtin.unrealized_conversion_cast %17 : !llvm.array<2 x vector<16xi8>> to vector<2x16xi8>
    %19 = builtin.unrealized_conversion_cast %18 : vector<2x16xi8> to !llvm.array<2 x vector<16xi8>>
    %20 = llvm.extractvalue %5[0] : !llvm.array<2 x vector<16xi8>> 
    %21 = llvm.shufflevector %20, %20 [0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %22 = llvm.extractvalue %5[1] : !llvm.array<2 x vector<16xi8>> 
    %23 = llvm.shufflevector %22, %22 [0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %24 = llvm.extractvalue %19[0] : !llvm.array<2 x vector<16xi8>> 
    %25 = llvm.shufflevector %24, %24 [0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %26 = llvm.extractvalue %19[1] : !llvm.array<2 x vector<16xi8>> 
    %27 = llvm.shufflevector %26, %26 [0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %28 = llvm.shufflevector %21, %21 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %29 = llvm.shufflevector %28, %10 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %30 = llvm.shufflevector %23, %23 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %31 = llvm.shufflevector %30, %29 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %32 = llvm.shufflevector %25, %25 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %33 = llvm.shufflevector %32, %10 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %34 = llvm.shufflevector %27, %27 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %35 = llvm.shufflevector %34, %33 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %36 = llvm.extractvalue %4[0] : !llvm.array<2 x vector<2xi32>> 
    %37 = llvm.shufflevector %36, %36 [0, 1, 0, 0] : vector<2xi32> 
    %38 = llvm.shufflevector %37, %9 [0, 1, 6, 7] : vector<4xi32> 
    %39 = llvm.extractvalue %4[1] : !llvm.array<2 x vector<2xi32>> 
    %40 = llvm.shufflevector %39, %39 [0, 1, 0, 0] : vector<2xi32> 
    %41 = llvm.shufflevector %40, %38 [4, 5, 0, 1] : vector<4xi32> 
    %42 = arm_neon.intr.smmla %41, %31, %35 : vector<16xi8> to vector<4xi32>
    %43 = llvm.extractvalue %5[0] : !llvm.array<2 x vector<16xi8>> 
    %44 = llvm.shufflevector %43, %43 [8, 9, 10, 11, 12, 13, 14, 15] : vector<16xi8> 
    %45 = llvm.extractvalue %5[1] : !llvm.array<2 x vector<16xi8>> 
    %46 = llvm.shufflevector %45, %45 [8, 9, 10, 11, 12, 13, 14, 15] : vector<16xi8> 
    %47 = llvm.extractvalue %19[0] : !llvm.array<2 x vector<16xi8>> 
    %48 = llvm.shufflevector %47, %47 [8, 9, 10, 11, 12, 13, 14, 15] : vector<16xi8> 
    %49 = llvm.extractvalue %19[1] : !llvm.array<2 x vector<16xi8>> 
    %50 = llvm.shufflevector %49, %49 [8, 9, 10, 11, 12, 13, 14, 15] : vector<16xi8> 
    %51 = llvm.shufflevector %44, %44 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %52 = llvm.shufflevector %51, %10 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %53 = llvm.shufflevector %46, %46 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %54 = llvm.shufflevector %53, %52 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %55 = llvm.shufflevector %48, %48 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %56 = llvm.shufflevector %55, %10 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %57 = llvm.shufflevector %50, %50 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %58 = llvm.shufflevector %57, %56 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %59 = arm_neon.intr.smmla %42, %54, %58 : vector<16xi8> to vector<4xi32>
    %60 = llvm.shufflevector %59, %59 [0, 1] : vector<4xi32> 
    %61 = llvm.insertvalue %60, %8[0] : !llvm.array<2 x vector<2xi32>> 
    %62 = llvm.shufflevector %59, %59 [2, 3] : vector<4xi32> 
    %63 = llvm.insertvalue %62, %61[1] : !llvm.array<2 x vector<2xi32>> 
    llvm.return %63 : !llvm.array<2 x vector<2xi32>>
  }
  llvm.func @vector_arm_neon_k_unroll_vecmat(%arg0: !llvm.array<1 x vector<32xi8>>, %arg1: !llvm.array<2 x vector<32xi4>>, %arg2: !llvm.array<1 x vector<2xi32>>) -> !llvm.array<1 x vector<2xi32>> {
    %0 = builtin.unrealized_conversion_cast %arg2 : !llvm.array<1 x vector<2xi32>> to vector<1x2xi32>
    %1 = builtin.unrealized_conversion_cast %arg1 : !llvm.array<2 x vector<32xi4>> to vector<2x32xi4>
    %2 = builtin.unrealized_conversion_cast %arg0 : !llvm.array<1 x vector<32xi8>> to vector<1x32xi8>
    %3 = builtin.unrealized_conversion_cast %1 : vector<2x32xi4> to !llvm.array<2 x vector<32xi4>>
    %4 = builtin.unrealized_conversion_cast %0 : vector<1x2xi32> to !llvm.array<1 x vector<2xi32>>
    %5 = builtin.unrealized_conversion_cast %2 : vector<1x32xi8> to !llvm.array<1 x vector<32xi8>>
    %6 = llvm.mlir.constant(dense<0> : vector<4xi32>) : vector<4xi32>
    %7 = llvm.mlir.constant(dense<0> : vector<16xi8>) : vector<16xi8>
    %8 = llvm.mlir.constant(dense<0> : vector<2x2xi32>) : !llvm.array<2 x vector<2xi32>>
    %9 = builtin.unrealized_conversion_cast %8 : !llvm.array<2 x vector<2xi32>> to vector<2x2xi32>
    %10 = builtin.unrealized_conversion_cast %9 : vector<2x2xi32> to !llvm.array<2 x vector<2xi32>>
    %11 = llvm.mlir.constant(dense<0> : vector<2x8xi8>) : !llvm.array<2 x vector<8xi8>>
    %12 = builtin.unrealized_conversion_cast %11 : !llvm.array<2 x vector<8xi8>> to vector<2x8xi8>
    %13 = builtin.unrealized_conversion_cast %12 : vector<2x8xi8> to !llvm.array<2 x vector<8xi8>>
    %14 = llvm.mlir.constant(dense<0> : vector<1x2xi32>) : !llvm.array<1 x vector<2xi32>>
    %15 = builtin.unrealized_conversion_cast %14 : !llvm.array<1 x vector<2xi32>> to vector<1x2xi32>
    %16 = builtin.unrealized_conversion_cast %15 : vector<1x2xi32> to !llvm.array<1 x vector<2xi32>>
    %17 = llvm.mlir.undef : !llvm.array<2 x vector<32xi8>>
    %18 = llvm.extractvalue %3[0] : !llvm.array<2 x vector<32xi4>> 
    %19 = llvm.sext %18 : vector<32xi4> to vector<32xi8>
    %20 = llvm.insertvalue %19, %17[0] : !llvm.array<2 x vector<32xi8>> 
    %21 = llvm.extractvalue %3[1] : !llvm.array<2 x vector<32xi4>> 
    %22 = llvm.sext %21 : vector<32xi4> to vector<32xi8>
    %23 = llvm.insertvalue %22, %20[1] : !llvm.array<2 x vector<32xi8>> 
    %24 = builtin.unrealized_conversion_cast %23 : !llvm.array<2 x vector<32xi8>> to vector<2x32xi8>
    %25 = builtin.unrealized_conversion_cast %24 : vector<2x32xi8> to !llvm.array<2 x vector<32xi8>>
    %26 = llvm.extractvalue %5[0] : !llvm.array<1 x vector<32xi8>> 
    %27 = llvm.shufflevector %26, %26 [0, 1, 2, 3, 4, 5, 6, 7] : vector<32xi8> 
    %28 = llvm.extractvalue %25[0] : !llvm.array<2 x vector<32xi8>> 
    %29 = llvm.shufflevector %28, %28 [0, 1, 2, 3, 4, 5, 6, 7] : vector<32xi8> 
    %30 = llvm.extractvalue %25[1] : !llvm.array<2 x vector<32xi8>> 
    %31 = llvm.shufflevector %30, %30 [0, 1, 2, 3, 4, 5, 6, 7] : vector<32xi8> 
    %32 = llvm.shufflevector %27, %27 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %33 = llvm.shufflevector %32, %7 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %34 = llvm.extractvalue %13[1] : !llvm.array<2 x vector<8xi8>> 
    %35 = llvm.shufflevector %34, %34 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %36 = llvm.shufflevector %35, %33 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %37 = llvm.shufflevector %29, %29 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %38 = llvm.shufflevector %37, %7 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %39 = llvm.shufflevector %31, %31 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %40 = llvm.shufflevector %39, %38 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %41 = llvm.extractvalue %4[0] : !llvm.array<1 x vector<2xi32>> 
    %42 = llvm.shufflevector %41, %41 [0, 1, 0, 0] : vector<2xi32> 
    %43 = llvm.shufflevector %42, %6 [0, 1, 6, 7] : vector<4xi32> 
    %44 = llvm.extractvalue %10[1] : !llvm.array<2 x vector<2xi32>> 
    %45 = llvm.shufflevector %44, %44 [0, 1, 0, 0] : vector<2xi32> 
    %46 = llvm.shufflevector %45, %43 [4, 5, 0, 1] : vector<4xi32> 
    %47 = arm_neon.intr.smmla %46, %36, %40 : vector<16xi8> to vector<4xi32>
    %48 = llvm.shufflevector %47, %47 [0, 1] : vector<4xi32> 
    %49 = llvm.insertvalue %48, %16[0] : !llvm.array<1 x vector<2xi32>> 
    %50 = llvm.extractvalue %5[0] : !llvm.array<1 x vector<32xi8>> 
    %51 = llvm.shufflevector %50, %50 [8, 9, 10, 11, 12, 13, 14, 15] : vector<32xi8> 
    %52 = llvm.extractvalue %25[0] : !llvm.array<2 x vector<32xi8>> 
    %53 = llvm.shufflevector %52, %52 [8, 9, 10, 11, 12, 13, 14, 15] : vector<32xi8> 
    %54 = llvm.extractvalue %25[1] : !llvm.array<2 x vector<32xi8>> 
    %55 = llvm.shufflevector %54, %54 [8, 9, 10, 11, 12, 13, 14, 15] : vector<32xi8> 
    %56 = llvm.shufflevector %51, %51 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %57 = llvm.shufflevector %56, %7 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %58 = llvm.extractvalue %13[1] : !llvm.array<2 x vector<8xi8>> 
    %59 = llvm.shufflevector %58, %58 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %60 = llvm.shufflevector %59, %57 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %61 = llvm.shufflevector %53, %53 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %62 = llvm.shufflevector %61, %7 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %63 = llvm.shufflevector %55, %55 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %64 = llvm.shufflevector %63, %62 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %65 = arm_neon.intr.smmla %47, %60, %64 : vector<16xi8> to vector<4xi32>
    %66 = llvm.shufflevector %65, %65 [0, 1] : vector<4xi32> 
    %67 = llvm.insertvalue %66, %49[0] : !llvm.array<1 x vector<2xi32>> 
    %68 = llvm.extractvalue %5[0] : !llvm.array<1 x vector<32xi8>> 
    %69 = llvm.shufflevector %68, %68 [16, 17, 18, 19, 20, 21, 22, 23] : vector<32xi8> 
    %70 = llvm.extractvalue %25[0] : !llvm.array<2 x vector<32xi8>> 
    %71 = llvm.shufflevector %70, %70 [16, 17, 18, 19, 20, 21, 22, 23] : vector<32xi8> 
    %72 = llvm.extractvalue %25[1] : !llvm.array<2 x vector<32xi8>> 
    %73 = llvm.shufflevector %72, %72 [16, 17, 18, 19, 20, 21, 22, 23] : vector<32xi8> 
    %74 = llvm.shufflevector %69, %69 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %75 = llvm.shufflevector %74, %7 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %76 = llvm.extractvalue %13[1] : !llvm.array<2 x vector<8xi8>> 
    %77 = llvm.shufflevector %76, %76 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %78 = llvm.shufflevector %77, %75 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %79 = llvm.shufflevector %71, %71 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %80 = llvm.shufflevector %79, %7 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %81 = llvm.shufflevector %73, %73 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %82 = llvm.shufflevector %81, %80 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %83 = arm_neon.intr.smmla %65, %78, %82 : vector<16xi8> to vector<4xi32>
    %84 = llvm.shufflevector %83, %83 [0, 1] : vector<4xi32> 
    %85 = llvm.insertvalue %84, %67[0] : !llvm.array<1 x vector<2xi32>> 
    %86 = llvm.extractvalue %5[0] : !llvm.array<1 x vector<32xi8>> 
    %87 = llvm.shufflevector %86, %86 [24, 25, 26, 27, 28, 29, 30, 31] : vector<32xi8> 
    %88 = llvm.extractvalue %25[0] : !llvm.array<2 x vector<32xi8>> 
    %89 = llvm.shufflevector %88, %88 [24, 25, 26, 27, 28, 29, 30, 31] : vector<32xi8> 
    %90 = llvm.extractvalue %25[1] : !llvm.array<2 x vector<32xi8>> 
    %91 = llvm.shufflevector %90, %90 [24, 25, 26, 27, 28, 29, 30, 31] : vector<32xi8> 
    %92 = llvm.shufflevector %87, %87 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %93 = llvm.shufflevector %92, %7 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %94 = llvm.extractvalue %13[1] : !llvm.array<2 x vector<8xi8>> 
    %95 = llvm.shufflevector %94, %94 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %96 = llvm.shufflevector %95, %93 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %97 = llvm.shufflevector %89, %89 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %98 = llvm.shufflevector %97, %7 [0, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31] : vector<16xi8> 
    %99 = llvm.shufflevector %91, %91 [0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0] : vector<8xi8> 
    %100 = llvm.shufflevector %99, %98 [16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7] : vector<16xi8> 
    %101 = arm_neon.intr.smmla %83, %96, %100 : vector<16xi8> to vector<4xi32>
    %102 = llvm.shufflevector %101, %101 [0, 1] : vector<4xi32> 
    %103 = llvm.insertvalue %102, %85[0] : !llvm.array<1 x vector<2xi32>> 
    llvm.return %103 : !llvm.array<1 x vector<2xi32>>
  }
}

